      SUBROUTINE FCBLOK ( BLOKS, INTEGS, NBLOKS, IPIVOT, SCRTCH, IFLAG )
CALLS SUBROUTINES  F A C T R B  AND  S H I F T B .
C
C   F C B L O K  SUPERVISES THE PLU FACTORIZATION WITH PIVOTING OF
C  SCALED ROWS OF THE ALMOST BLOCK DIAGONAL MATRIX STORED IN THE ARRAYS
C   B L O K S  AND  I N T E G S .
C
C   FACTRB = SUBPROGRAM WHICH CARRIES OUT STEPS 1,...,LAST OF GAUSS
C            ELIMINATION (WITH PIVOTING) FOR AN INDIVIDUAL BLOCK.
C   SHIFTB = SUBPROGRAM WHICH SHIFTS THE REMAINING ROWS TO THE TOP OF
C            THE NEXT BLOCK
C
C***REVISION HISTORY  (YYMMDD)
C   000330  Modified array declarations.  (JEC)
C
C PARAMETERS
C    BLOKS   AN ARRAY THAT INITIALLY CONTAINS THE ALMOST BLOCK DIAGONAL
C            MATRIX  A  TO BE FACTORED, AND ON RETURN CONTAINS THE COM-
C            PUTED FACTORIZATION OF  A .
C    INTEGS  AN INTEGER ARRAY DESCRIBING THE BLOCK STRUCTURE OF  A .
C    NBLOKS  THE NUMBER OF BLOCKS IN  A .
C    IPIVOT  AN INTEGER ARRAY OF DIMENSION  SUM (INTEGS(1,I) , I=1,
C            ...,NBLOKS) WHICH, ON RETURN, CONTAINS THE PIVOTING STRA-
C            TEGY USED.
C    SCRTCH  WORK AREA REQUIRED, OF LENGTH  MAX (INTEGS(1,I) , I=1,
C            ...,NBLOKS).
C    IFLAG   OUTPUT PARAMETER,
C            = 0  IN CASE MATRIX WAS FOUND TO BE SINGULAR.
C            OTHERWISE,
C            = (-1)**(NUMBER OF ROW INTERCHANGES DURING FACTORIZATION)
C
      INTEGER INTEGS(3,NBLOKS),IPIVOT(*),IFLAG, I,INDEX,INDEXB,INDEXN,
     *        LAST,NCOL,NROW
      REAL BLOKS(*),SCRTCH(*)
      IFLAG = 1
      INDEXB = 1
      INDEXN = 1
      I = 1
C                        LOOP OVER THE BLOCKS.  I  IS LOOP INDEX
   10    INDEX = INDEXN
         NROW = INTEGS(1,I)
         NCOL = INTEGS(2,I)
         LAST = INTEGS(3,I)
C        CARRY OUT ELIMINATION ON THE I-TH BLOCK UNTIL NEXT BLOCK
C        ENTERS, I.E., FOR COLUMNS 1,...,LAST  OF I-TH BLOCK.
         CALL FACTRB(BLOKS(INDEX),IPIVOT(INDEXB),SCRTCH,NROW,NCOL,LAST,
     *            IFLAG)
C         CHECK FOR HAVING REACHED A SINGULAR BLOCK OR THE LAST BLOCK
         IF (IFLAG .EQ. 0 .OR. I .EQ. NBLOKS)
     *                                  RETURN
         I = I+1
         INDEXN = NROW*NCOL + INDEX
C              PUT THE REST OF THE I-TH BLOCK ONTO THE NEXT BLOCK
         CALL SHIFTB(BLOKS(INDEX),IPIVOT(INDEXB),NROW,NCOL,LAST,
     *            BLOKS(INDEXN),INTEGS(1,I),INTEGS(2,I))
         INDEXB = INDEXB + NROW
                                        GO TO 10
      END
