      SUBROUTINE SPLIT2(MM, M, N, A, CLAB, RLAB, TITLE, KD, TH, IORD,
     *                  DMIWRK, IWORK, DMWORK, WORK, IERR, OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      SPLITS MATRIX OF CASE-BY-VARIABLE DATA VALUES INTO BLOCKS UNTIL
C      ALL WITHIN-BLOCK VARIANCES ARE LESS THAN A GIVEN THRESHOLD.
C      INCLUDES USER-CONTROLLED CONSTRAINTS
C
C   DESCRIPTION
C   -----------
C
C   1.  THE THRESHOLD IS THE LARGEST VARIANCE FOR THE DATA VALUES IN
C       THE BLOCKS.  THE VARIABLES SHOULD BE SCALED SIMILARLY (CLUSTER
C       SUBROUTINE CAN BE USED TO STANDARDIZE THE VARIABLES.  THE
C       ROUTINE STARTS WITH THE DATA MATRIX AS ONE BLOCK.  THEN THE
C       BLOCK WITH THE LARGEST VARIANCE IS CHOSEN AND IF THAT VARIANCE
C       IS LARGER THAN THE THRESHOLD, THE BLOCK IS OPTIMALLY SPLIT BY
C       BOTH CASES AND VARIABLES.  THE VARIANCES FOR THE NEW BLOCKS ARE
C       DETERMINED AND THE PROCESS REPEATS BY FINDING THE NEWEST
C       LARGEST VARIANCE.  ONCE THE LARGEST VARIANCE IS LESS THAN THE
C       THRESHOLD, THE RESULTS ARE PRINTED IN A BLOCK DIAGRAM ON
C       FORTRAN UNIT OUNIT.  THE THRESHOLD SHOULD BE CHOSEN WISELY AS A
C       LARGE THRESHOLD WILL PRODUCE A FEW LARGE BLOCKS AND A SMALL
C       THRESHOLD WILL PRODUCE MANY SMALL BLOCKS.
C
C   2.  MISSING VALUES SHOULD BE REPRESENTED BY 99999.
C
C   3.  THE CASES AND/OR VARIABLES CAN BE CONSTRAINED BY THE IORD
C       PARAMETER.  SETTING IORD = 0 HAS BOTH CASES AND VARIABLES
C       UNCONSTRAINED; SETTING IORD = 1 CONSTRAINS ONLY CASES; SETTING
C       IORD = 2 CONSTRAINS ONLY VARIABLES; AND SETTING IORD = 3
C       CONSTRAINS BOTH CASES AND VARIABLES.
C
C   3.  THE BLOCK DIAGRAM IS THE DATA MATRIX WITH THE DATA VALUES
C       MULTIPLIED BY 10.  THE BLOCKS ARE OUTLINED BY THE VERTICAL AND
C       HORIZONTAL LINES.
C
C   INPUT PARAMETERS
C   ----------------
C
C   MM    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE LEADING DIMENSION OF MATRIX A.  MUST BE AT LEAST M.
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF OBJECTS.
C
C   N     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF VARIABLES.
C
C   A     REAL MATRIX WHOSE FIRST DIMENSION MUST BE MM AND SECOND
C            DIMENSION MUST BE AT LEAST M (CHANGED ON OUTPUT).
C         THE DATA MATRIX.
C
C         A(I,J) IS THE VALUE FOR THE J-TH VARIABLE FOR THE I-TH CASE.
C
C   CLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST N
C            (CHANGED ON OUTPUT).
C         ORDERED LABELS OF THE COLUMNS.
C
C   RLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST M
C            (CHANGED ON OUTPUT).
C         ORDERED LABELS OF THE ROWS.
C
C   TITLE 10-CHARACTER VARIABLE (UNCHANGED ON OUTPUT).
C         TITLE OF DATA SET.
C
C   KD    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         MAXIMUM NUMBER OF BLOCKS.  SHOULD BE BETWEEN M AND N*M.
C
C   TH    REAL SCALAR (UNCHANGED ON OUTPUT).
C         THRESHOLD VARIANCE FOR DATA VALUES WITHIN A BLOCK.
C
C   IORD  INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         ORDERING PARAMETER.
C
C            IORD = 0 CASES AND VARIABLES ARE UNCONSTRAINED
C            IORD = 1 CONSTRAIN CASES
C            IORD = 2 CONSTRAIN VARIABLES
C            IORD = 3 CASES AND VARIABLES ARE CONSTRAINED
C
C   DMIWRK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE LEADING DIMENSION OF MATRIX IWORK.  MUST BE AT LEAST 4.
C
C   IWORK INTEGER MATRIX WHOSE FIRST DIMENSION MUST BE DMIWRK AND SECOND
C            DIMENSION MUST BE AT LEAST KC.
C         WORK MATRIX.
C
C   DMWORK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE LEADING DIMENSION OF MATRIX WORK.  MUST BE AT LEAST 18.
C
C   WORK  REAL MATRIX WHOSE FIRST DIMENSION MUST BE DMWORK AND SECOND
C            DIMENSION MUST BE AT LEAST MAX(M,N).
C         WORK MATRIX.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   OUTPUT PARAMETER
C   ----------------
C
C   IERR  INTEGER SCALAR.
C         ERROR FLAG.
C
C         IERR = 0, NO ERRORS WERE DETECTED DURING EXECUTION
C
C         IERR = 1, THE NUMBER OF BLOCKS NEEDED WAS LARGER THAN THE
C                   NUMBER OF BLOCKS ALLOCATED.  EXECUTION IS
C                   TERMINATED.  INCREASE KD.
C
C         IERR = 2, EITHER THE FIRST AND LAST CASES OR THE CLUSTER
C                   DIAMETER FOR A CLUSTER IS OUT OF BOUNDS.  THE
C                   CLUSTER AND ITS BOUNDARIES ARE PRINTED ON UNIT
C                   OUNIT.  EXECUTION WILL CONTINUE WITH QUESTIONABLE
C                   RESULTS FOR THAT CLUSTER.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1972) "DIRECT CLUSTERING OF A DATA MATRIX."
C        JOURNAL OF THE AMERICAN STATISTICAL ASSOCIATION. VOL. 67,
C        PAGES 123-129.
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGES 251-277.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMIWRK, DMWORK, OUNIT
      DIMENSION A(MM,*), IWORK(DMIWRK,*), WORK(DMWORK,*)
      CHARACTER*4 CLAB(*), RLAB(*)
      CHARACTER*10 TITLE
C
C     INITIALIZE BLOCKS AND ROW AND COLUMN CLUSTERS
C
      IERR = 0
      WORK(1,1)=1.
      WORK(2,1)=M
      WORK(10,1)=1.
      WORK(11,1)=N
      KR=1
      KC=1
      KA=1
      IWORK(1,1)=2
      IWORK(2,1)=M+1
      IWORK(3,1)=2
      IWORK(4,1)=N+1
      IR=1
      IC=1
      K=KD
      CALL RSPLIT(MM,M,N,A,RLAB,IR,KA,TH,IORD,DMIWRK,IWORK,DMWORK,WORK)
      CALL CSPLIT(MM,M,N,A,CLAB,IC,KA,TH,IORD,DMIWRK,IWORK,DMWORK,WORK)
   10 IF (KA .GT. KD) THEN
         IF (OUNIT .GT. 0) WRITE(OUNIT,1)
    1    FORMAT(' NUMBER OF BLOCKS ALLOCATED IS TOO SMALL. INCREASE KD')
         IERR = 1
         RETURN
      ENDIF
C
C     FIND BEST CASE OR VARIABLE SPLIT
C
      IB=1
      XB=0.
      DO 20 I=1,KR
         IF(WORK(3,I).GT.XB) THEN
            XB=WORK(3,I)
            IB=I
         ENDIF
   20 CONTINUE
      DO 30 J=1,KC
         IF(WORK(12,J).GT.XB) THEN
            XB=WORK(12,J)
            IB=J+M
         ENDIF
   30 CONTINUE
      IF(XB.EQ.0.) GOTO 60
C
C     SPLIT CASE CLUSTER
C
      KKC=KA
      IF(IB.LE.M) THEN
         IL=INT(WORK(1,IB))
         IU=INT(WORK(2,IB))
         IM=INT(WORK(4,IB))
         DO 40 K=1,KA
            IF(IWORK(1,K).EQ.IL+1.AND.IWORK(2,K).EQ.IU+1) THEN
               KKC=KKC+1
               IWORK(1,KKC)=IM+2
               IWORK(2,KKC)=IWORK(2,K)
               IWORK(2,K)=IM+1
               IWORK(3,KKC)=IWORK(3,K)
               IWORK(4,KKC)=IWORK(4,K)
            ENDIF
   40    CONTINUE
         KA=KKC
         WORK(2,IB)=IM
         KR=KR+1
         WORK(1,KR)=IM+1
         WORK(2,KR)=IU
         CALL RSPLIT(MM,M,N,A,RLAB,IB,KA,TH,IORD,DMIWRK,IWORK,DMWORK,
     *               WORK)
         CALL RSPLIT(MM,M,N,A,RLAB,KR,KA,TH,IORD,DMIWRK,IWORK,DMWORK,
     *               WORK)
         GO TO 10
      ELSE
C
C    SPLIT VARIABLE CLUSTER
C
         JB=IB-M
         JL=INT(WORK(10,JB))
         JU=INT(WORK(11,JB))
         JM=INT(WORK(13,JB))
         DO 50 K=1,KA
            IF(IWORK(3,K).EQ.JL+1.AND.IWORK(4,K).EQ.JU+1) THEN
               KKC=KKC+1
               IWORK(3,KKC)=JM+2
               IWORK(4,KKC)=IWORK(4,K)
               IWORK(4,K)=JM+1
               IWORK(1,KKC)=IWORK(1,K)
               IWORK(2,KKC)=IWORK(2,K)
            ENDIF
   50    CONTINUE
         KA=KKC
         WORK(11,JB)=JM
         KC=KC+1
         WORK(10,KC)=JM+1
         WORK(11,KC)=JU
         CALL CSPLIT(MM,M,N,A,CLAB,KC,KA,TH,IORD,DMIWRK,IWORK,DMWORK,
     *               WORK)
         CALL CSPLIT(MM,M,N,A,CLAB,JB,KA,TH,IORD,DMIWRK,IWORK,DMWORK,
     *               WORK)
         GO TO 10
      ENDIF
   60 DO 70 K=1,KA
        DO 70 J=1,4
   70      IF(IWORK(J,K).LT.0) IWORK(J,K)=-IWORK(J,K)
      CALL BLOCK(MM,M+1,N+1,A,CLAB,RLAB,TITLE,KA,DMIWRK,IWORK,IERR,
     *           OUNIT)
      RETURN
      END
