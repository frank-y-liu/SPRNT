      SUBROUTINE CNVERT(NC, DMIWRK, IWORK, LLB, M, RL)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      CONVERTS TREE INFORMATION FROM POINTER FORM TO BOUNDARY FORM
C
C   DESCRIPTION
C   -----------
C
C   1.  THE POINTER FORM ASSIGNS TO EACH CLUSTER THE SMALLEST CLUSTER
C       THAT CONTAINS IT, WHICH WOULD BE ITS DIRECT ANCESTOR IN THE
C       TREE.  THE LEVEL OF THE TREE THAT EACH CLUSTER BELONGS TO IS
C       FIRST DETERMINED, THEN EACH CLUSTER IS ADDED TO THE BOUNDARY
C       ARRAY WITH A DIAMETER SET EQUAL TO 5 TIMES THE LEVEL OF THE
C       CLUSTER.  THE BOUNDARY ARRAY CAN THEN BE PASSED TO ROUTINE
C       TREE1 FOR PRINTING.
C
C   INPUT PARAMETERS
C   ----------------
C
C   NC    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CLUSTERS.
C
C   DMIWRK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX IWORK.  MUST BE AT LEAST 6.
C
C   IWORK INTEGER MATRIX WHOSE FIRST DIMENSION MUST BE DMIWRK AND SECOND
C            DIMENSION MUST BE AT LEAST NC (CHANGED ON OUTPUT).
C
C         IWORK(4,I) IS THE NEXT CLUSTER WITH THE SAME ANCESTOR AS
C                    CLUSTER I.
C         IWORK(5,I) IS THE FIRST CLUSTER WHOSE ANCESTOR IS I.
C
C   LLB   VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST NC
C            (UNCHANGED ON OUTPUT).
C
C         LLB(I) IS THE LABEL OF THE I-TH CLUSTER.
C
C   OUTPUT PARAMETERS
C   -----------------
C
C   IWORK INTEGER MATRIX WHOSE FIRST DIMENSION MUST BE DMIWRK AND SECOND
C            DIMENSION MUST BE AT LEAST NC.
C
C         IWORK(1,I) IS 1 + THE FIRST OBJECT IN CLUSTER I
C         IWORK(2,I) IS 1 + THE LAST OBJECT IN CLUSTER I
C         IWORK(3,I) IS THE CLUSTER DIAMETER
C
C   M     INTEGER SCALAR.
C         THE FINAL NUMBER OF OBJECTS.
C
C   RL    VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST NC.
C         RL(I) IS THE LABEL OF THE I-TH BLOCK.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGE 167.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMIWRK, IWORK(DMIWRK,*)
      CHARACTER*4 LLB(*), RL(*)
C
C     DETERMINE LEVEL OF CLUSTER I
C
      M=0
      DO 10 K=1,NC
         IWORK(6,K)=0
         IF(IWORK(5,K).EQ.0) THEN
            M=M+1
            IWORK(6,K)=1
         ENDIF
   10 CONTINUE
      DO 20 K=1,NC
         KK=NC-K+1
         L2=IWORK(5,KK)
         IF(L2.NE.0) IWORK(6,KK)=IWORK(6,KK)+IWORK(6,L2)
         L3=IWORK(4,KK)
         IF(L3.NE.0) IWORK(6,KK)=IWORK(6,KK)+IWORK(6,L3)
   20 CONTINUE
      DO 40 K=1,NC
         KK=IWORK(5,K)
         IF(KK.NE.0) THEN
            IK=IWORK(6,K)-IWORK(6,KK)
   30       IWORK(6,KK)=IWORK(6,KK)+IK
            KK=IWORK(4,KK)
            IF(KK.NE.0) GO TO 30
         ENDIF
   40 CONTINUE
C
C     DETERMINE BOUNDARIES OF CLUSTERS
C
      DO 60 K=1,NC
         KK=NC-K+1
         IWORK(2,KK)=I1MACH(9)
         IWORK(3,KK)=0
         L3=IWORK(5,KK)
         IF(L3.EQ.0) THEN
            IWORK(2,KK)=IWORK(6,KK)
            IWORK(3,KK)=IWORK(6,KK)
         ENDIF
   50    IF(L3.NE.0) THEN
            IWORK(2,KK)=MIN0(IWORK(2,KK),IWORK(2,L3))
            IWORK(3,KK)=MAX0(IWORK(3,KK),IWORK(3,L3))
            L3=IWORK(4,L3)
            GOTO 50
         ENDIF
   60 CONTINUE
C
C     SET UP LABELS
C
      DO 70 K=1,NC
         I=IWORK(6,K)
   70    RL(I)=LLB(K)
C
C     LEVELS OF CLUSTER
C
      DO 80 K=1,NC
   80    IWORK(1,K)=1
      DO 90 K=1,NC
         KK=NC-K+1
         L2=IWORK(4,KK)
         L3=IWORK(5,KK)
         IF(L2.NE.0) IWORK(1,KK)=MAX0(IWORK(1,L2),IWORK(1,KK))
         IF(L3.NE.0) IWORK(1,KK)=MAX0(IWORK(1,L3)+1,IWORK(1,KK))
   90 CONTINUE
      DO 100 K=1,NC
         L3=IWORK(5,K)
         IF(L3.NE.0) IWORK(1,L3)=IWORK(1,K)-1
         L2=IWORK(4,K)
  100    IF(L2.NE.0) IWORK(1,L2)=IWORK(1,K)
      DO 110 K=1,NC
         I=IWORK(1,K)
         IWORK(1,K)=IWORK(2,K)
         IWORK(2,K)=IWORK(3,K)
  110    IWORK(3,K)=5*I
      RETURN
      END
