      SUBROUTINE TREE1(M, K, DMNB, NB, RL, IERR, OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      PRINTS A TREE OF OBJECTS
C
C   DESCRIPTION
C   -----------
C
C   1.  THERE EXISTS AN ORDERING OF THE OBJECTS SUCH THAT EVERY CLUSTER
C       CONSISTS OF A SET OF OBJECTS CONTIGUOUS IN THE ORDER.  THE
C       ALGORITHM IS GIVEN ON PAGE 156 OF THE FIRST REFERENCE.  THE
C       OBJECTS ARE STORED IN THE VECTOR RL IN SUCH A SORTED ORDER.
C
C   2.  THIS ORDERING OF THE OBJECTS ALLOWS THE CLUSTERS TO BE NAMED BY
C       GIVING THE LOCATION OF THE FIRST AND LAST OBJECTS IN THE ARRAY
C       FOR EACH CLUSTER.  THE FIRST TWO COLUMNS OF THE NB ARRAY STORE
C       THESE FIRST AND LAST OBJECTS AND THE THIRD COLUMN STORE THE
C       DIAMETER OF THE CLUSTER, OR THE DISTANCE BETWEEN THE FIRST AND
C       LAST OBJECTS.
C
C   3.  FOR EACH OBJECT, SEARCH EACH CLUSTER PLACING A MARK AT THE
C       DIAMETER DISTANCE OF EACH CLUSTER THE OBJECT BELONGS TO.  THE
C       MARK IS A COMMA IF THE OBJECT IS ON THE BORDER OF A CLUSTER OR
C       A QUOTE MARK IF THE OBJECT IS IN THE INTERIOR OF A CLUSTER.
C       THE CLUSTERS CAN BE RECOVERED FROM THE DIAGRAM BY LINKING THE
C       QUOTE MARKS TO THE COMMAS ON BOTH SIDES OF THEM.
C
C   INPUT PARAMETERS
C   ----------------
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF OBJECTS.
C
C   K     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CLUSTERS.
C
C   DMNB  INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         LEADING DIMENSION OF MATRIX NB.  MUST BE AT LEAST 3.
C
C   NB    REAL MATRIX WHOSE FIRST DIMENSION MUST BE DMNB AND SECOND
C            DIMENSION MUST BE AT LEAST K (UNCHANGED ON OUTPUT).
C         THE MATRIX DEFINING THE BOUNDARIES OF THE CLUSTERS.
C
C         NB(1,I) IS 1 + THE FIRST OBJECT IN CLUSTER I
C         NB(2,I) IS 1 + THE LAST OBJECT IN CLUSTER I
C         NB(3,I) IS THE CLUSTER DIAMETER
C
C   RL    VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST M+1
C            (UNCHANGED ON OUTPUT).
C         RL(1) IS THE LABEL OF THE TREE.
C         RL(I+1) IS THE LABEL OF THE I-TH OBJECT.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   OUTPUT PARAMETER
C   ----------------
C
C   IERR  INTEGER SCALAR.
C         ERROR FLAG.
C
C         IERR = 0, NO ERRORS WERE DETECTED DURING EXECUTION
C
C         IERR = 1, EITHER THE FIRST AND LAST CASES OR THE CLUSTER
C                   DIAMETER FOR A CLUSTER IS OUT OF BOUNDS.  THE
C                   CLUSTER ITS VALUES ARE PRINTED ON UNIT OUNIT.
C                   EXECUTION WILL CONTINUE WITH QUESTIONABLE RESULTS
C                   FOR THAT CLUSTER.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGE 165.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMNB, OUNIT
      DIMENSION NB(DMNB,*)
      CHARACTER*4 RL(*)
      CHARACTER*1 A,B,C,D,E,AA(101)
      DATA A,B,C,D,E/',','-','''','/',' '/
C
C     CHECK NB ARRAY FOR ILLEGAL VALUES
C
      IF (OUNIT .LE. 0) RETURN
      DO 10 KK=1,K
         I=NB(1,KK)
         J=NB(2,KK)
         L=NB(3,KK)
         IF(I.LT.1.OR.I.GT.J.OR.J.GT.M.OR.L.LT.0.OR.L.GT.100) THEN
            WRITE(OUNIT,1) KK,I,J,L
            IERR = 1
         ENDIF
   10 CONTINUE
    1 FORMAT(' ERROR IN CLUSTER',I4,' FIRST OBJ = ',I3,' LAST OBJ = '
     *,I3,' DIAM = ',I3)
C
C     PRINT TREE, CASE BY CASE
C
      DO 50 I=1,M
         DO 20 L=1,101
   20      AA(L)=E
         DO 40 KK=1,K
C
C     DETERMINE IF CLUSTER KK CONTAINS CASE I
C
            IF(NB(1,KK).LE.I.AND.NB(2,KK).GE.I) THEN
               J=NB(3,KK)+1
               AA(J)=C
               IF(NB(1,KK).EQ.I.OR.NB(2,KK).EQ.I) THEN
                  DO 30 L=1,J
   30                IF(AA(L).EQ.E) AA(L)=B
                  IF(NB(2,KK).EQ.I) AA(J)=C
                  IF(NB(1,KK).EQ.I) AA(J)=A
               ENDIF
            ENDIF
   40    CONTINUE
         WRITE(OUNIT,2) I,RL(I),(AA(J),J=1,101)
    2    FORMAT(I5,4X,A4,1X,101A1)
   50 CONTINUE
      RETURN
      END
