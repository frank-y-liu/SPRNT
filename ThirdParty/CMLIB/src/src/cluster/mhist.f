      SUBROUTINE MHIST(MM, M, N, A, CLAB, RLAB, TITLE, XMIN, XMAX, NV,
     *                 NDIAGS, DMWORK, WORK, DMIWRK, IWORK, IWORK2, XLL,
     *                 OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      PRODUCES MULTIVARIATE HISTOGRAMS
C
C   DESCRIPTION
C   -----------
C
C   1.  THE DIAGRAMS ARE COMPUTED SEQUENTIALLY.  THE FIRST DIAGRAM
C       BEGINS WITH THE SMALLEST RANGE FOR EACH VARIABLE WHICH CONTAINS
C       EVERY OBSERVATION.  THEN THE RANGES FOR EACH VARIABLE ARE
C       VARIED AND THE NEW RANGES ARE ACCEPTED IF THEY INCREASE THE
C       LOG-LIKELIHOOD OF THE OBSERVATIONS WITHIN THOSE RANGES.  EACH
C       RANGE IS VARIED UNTIL NO FURTHER CHANGE INCREASES THE
C       LIKELIHOOD.  THE FIRST DIAGRAM IS COMPLETED AND PRINTED AND THE
C       OBSERVATIONS WITHIN THE FINAL RANGES ARE DELETED AND THE VOLUME
C       OF THE BLOCKS ARE IGNORED IN LATER DIAGRAM CALCULATIONS.  A
C       SECOND DIAGRAM, AGAIN STARTING WITH THE SMALLEST RANGE FOR EACH
C       VARIABLE WHICH CONTAINS EVERY REMAINING OBSERVATION, IS ADDED
C       AND VARIED TO MAXIMIZE THE LIKELIHOOD OF BOTH BLOCKS.  THE
C       OTHER DIAGRAMS ARE COMPUTED SIMILARLY.
C
C   2.  THE OUTPUT IS ON FORTRAN UNIT OUNIT AND CONSISTS OF THE SET OF
C       DIAGRAMS.  FOR EACH DIAGRAM, THE RANGES FOR EACH VARIABLE ARE
C       ENCLOSED IN A RECTANGULAR BLOCK.  TO THE RIGHT OF EACH DIAGRAM
C       IS A RECTANGLE WHOSE LENGTH IN THE HORIZONTAL DIRECTION IS THE
C       NUMBER OF CASES WITHIN THE SET OF RANGES FOR THAT PARTICULAR
C       DIAGRAM.  THE SUM OF THE HORIZONTAL DISTANCES FOR ALL DIAGRAMS
C       SHOULD ADD UP TO THE TOTAL NUMBER OF CASES.
C
C   INPUT PARAMETERS
C   ----------------
C
C   MM    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX A.  MUST BE AT LEAST M.
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CASES.
C
C   N     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF VARIABLES.
C
C   A     REAL MATRIX WHOSE FIRST DIMENSION MUST BE MM AND WHOSE SECOND
C           DIMENSION MUST BE AT LEAST N (UNCHANGED ON OUTPUT).
C         THE MATRIX OF DATA VALUES.
C
C         A(I,J) IS THE VALUE FOR THE J-TH VARIABLE FOR THE I-TH CASE.
C
C   CLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST N.
C            (UNCHANGED ON OUTPUT).
C         THE LABELS OF THE VARIABLES.
C
C   RLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST M.
C            (UNCHANGED ON OUTPUT).
C         THE LABELS OF THE CASES.
C
C   TITLE 10-CHARACTER VARIABLE (UNCHANGED ON OUTPUT).
C         TITLE OF THE DATA SET.
C
C   XMIN  INTEGER VECTOR DIMENSIONED AT LEAST N (UNCHANGED ON OUTPUT).
C         XMIN(I) IS THE MINIMUM VALUE TO BE PLOTTED FOR VARIABLE I.
C
C   XMAX  INTEGER VECTOR DIMENSIONED AT LEAST N (UNCHANGED ON OUTPUT).
C         XMAX(I) IS THE MAXIMUM VALUE TO BE PLOTTED FOR VARIABLE I.
C
C         IF XMIN(I) .GE. XMAX(I) ON INPUT, THEIR VALUES WILL BE
C            DETERMINED BY THE ROUTINE.
C
C   NV    INTEGER VECTOR DIMENSIONED AT LEAST N (UNCHANGED ON OUTPUT).
C         VECTOR DEFINING THE ORDER OF THE VARIABLES.
C
C   NDIAGS INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF DIAGRAMS.
C
C   DMWORK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX WORK.  MUST BE AT LEAST
C            2*NDIAGS.
C
C   WORK  REAL MATRIX WHOSE FIRST DIMENSION MUST BE DMWORK AND WHOSE
C            SECOND DIMENSION MUST BE AT LEAST N+1.
C         WORK MATRIX.
C
C   DMIWRK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX IWORK.  MUST BE AT LEAST
C            2*NDIAGS.
C
C   IWORK INTEGER MATRIX WHOSE FIRST DIMENSION MUST BE DMIWRK AND WHOSE
C            SECOND DIMENSION MUST BE AT LEAST N.
C         WORK MATRIX.
C
C   IWORK2 INTEGER VECTOR DIMENSIONED AT LEAST M.
C         WORK VECTOR.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   OUTPUT PARAMETER
C   ----------------
C
C   XLL   REAL SCALAR (CHANGED ON OUTPUT).
C         THE LOG LIKELIHOOD OF THE FINAL SET OF BLOCKS.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGES 40, 54-55.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMWORK, DMIWRK, OUNIT
      DIMENSION A(MM,*), XMIN(*), XMAX(*), NV(*), WORK(DMWORK,*),
     *          IWORK(DMIWRK,*), IWORK2(*)
      CHARACTER*4 RLAB(*), CLAB(*)
      CHARACTER*10 TITLE
      CHARACTER*1 BL, X, H, P,  AA(112)
      DATA BL,X,H,P/' ','!','_','.'/
C
      DO 10 I = 1 , N
        IF (XMIN(I) .GE. XMAX(I))CALL RANGE(M, A(1,I), XMIN(I), XMAX(I))
         DO 10 L = 1 , NDIAGS
            WORK(L,I) = XMIN(I)
            WORK(NDIAGS+L,I) = XMAX(I)
  10  CONTINUE
C
C     COMPUTE OPTIMAL BLOCKS
C
      CALL TRY1(MM,M,N,A,NDIAGS,NV,DMWORK,WORK,XLL,WORK(1,N+1))
C
C     OUTPUT BLOCKS
C
      IF (OUNIT .GT. 0)
     *              WRITE(OUNIT,1) TITLE,(CLAB(J),XMIN(J),XMAX(J),J=1,N)
    1 FORMAT('1 MODAL HISTOGRAM OF ',A10/
     *' INTERVALS ...!  !.... FOR EACH VARIABLE DEFINE MODAL BLOCKS '/
     *' RECTANGLES TO RIGHT HAVE AREA PROPORTIONAL TO NUMBER IN MODE '//
     *' VARIABLE RANGES '/(1X,A4,F9.3,2X,16('.'),1X,F10.3))
      DO 20 J=1,N
         DO 20 K=1,NDIAGS
            IWORK(K,J)=INT(15*(WORK(K,J)-XMIN(J))/(XMAX(J)-XMIN(J)))+1
            IWORK(NDIAGS+K,J)=INT(15*(WORK(NDIAGS+K,J)-XMIN(J))/(XMAX(J)
     *                -XMIN(J)))+1
   20 CONTINUE
      DO 30 I=1,M
   30    IWORK2(I)=0
      DO 130 K=1,NDIAGS
C
C     COUNT NUMBER OF CASES WHOSE VALUES ARE COMPLETELY WITHIN BLOCK
C     THAT HAVEN'T BEEN COUNTED BEFORE
C
         NK=0
         DO 50 I=1,M
            IF(IWORK2(I).EQ.0) THEN
               DO 40 J=1,N
   40             IF(A(I,J).GT.WORK(NDIAGS+K,J).OR.A(I,J).LT.WORK(K,J))
     *                 GOTO 50
               IWORK2(I)=1
               NK=NK+1
            ENDIF
   50    CONTINUE
C
C     GENERATE HEIGHT
C
         NK=NK+19
         DO 60 I=1,112
   60       AA(I)=BL
         DO 70 I=3,NK
   70       IF(I.NE.17.AND.I.NE.18.AND.I.NE.NK) AA(I)=H
         IF (OUNIT .GT. 0) WRITE(OUNIT,2) (AA(I),I=1,112)
    2    FORMAT(15X,112A1)
         DO 80 I=19,NK
   80       AA(I)=BL
C
C     WORK ON PROFILE
C
         DO 110 JJ=1,N
            J=NV(JJ)
            DO 90 I=1,18
   90          AA(I)=BL
            AA(19)=X
            AA(NK)=X
            K1=IWORK(K,J)+1
            K2=IWORK(NDIAGS+K,J)+1
            AA(K1)=X
            AA(K2)=X
            J1=JJ+1
            IF(JJ.EQ.N) J1=JJ
            J1=NV(J1)
            K3=IWORK(K,J1)+1
            K4=IWORK(NDIAGS+K,J1)+1
            DO 100 KK=2,17
               IF(KK.NE.K1.AND.KK.NE.K2) THEN
                  IF(KK.LT.K1) AA(KK)=P
                  IF(KK.GT.K2) AA(KK)=P
                  IF((KK-K3)*(KK-K1).LT.0) AA(KK)=H
                  IF((KK-K4)*(KK-K2).LT.0) AA(KK)=H
               ENDIF
  100       CONTINUE
C
C     PRINT A LINE
C
            IF (OUNIT .GT. 0) WRITE(OUNIT,3) CLAB(J),(AA(I),I=1,112)
    3       FORMAT(10X,A4,1X,112A1)
  110    CONTINUE
         DO 120 I=3,NK
  120       IF(I.NE.17.AND.I.NE.18.AND.I.NE.NK) AA(I)=H
  130    IF (OUNIT .GT. 0) WRITE(OUNIT,4)(AA(I),I=1,112)
    4 FORMAT('+',14X,112A1)
      RETURN
      END
