      SUBROUTINE QUICK(MM, M, N, A, CLAB, RLAB, TITLE, THRESH, XMISS,
     *                 NC, IWORK, OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      FINDS A QUICK PARTITION OF THE CASES BY COMPARING, TO A USER-
C      DEFINED THRESHOLD, THE EUCLIDEAN DISTANCES TO THE EXISTING
C      CLUSTER LEADERS
C
C   DESCRIPTION
C   -----------
C
C   1.  INITIALLY, THE FIRST CASE WILL BE ASSIGNED TO THE FIRST CLUSTER
C       AND BECOMES THE LEADER OF THE FIRST CLUSTER.  THEN, GIVEN A NEW
C       CASE, CYCLE THROUGH THE EXISTING CLUSTERS IN ORDER.  PLACE THE
C       CASE IN THE FIRST CLUSTER WHERE THE DISTANCE BETWEEN THE CASE
C       AND THE CLUSTER LEADER IS LESS THAN THE THRESHOLD.  IF NO
C       CLUSTER EXISTS, PLACE THE CASE IN A NEW CLUSTER MAKING IT THE
C       CLUSTER LEADER.  ONCE THE MAXIMUM NUMBER OF DESIRED CLUSTERS
C       HAS BEEN REACHED, NO NEW CLUSTERS WILL BE FORMED AND CASES NOT
C       BELONGING TO AN EXISTING CLUSTER WILL BE IGNORED.
C
C   2.  THE DISTANCE FUNCTION USED IS THE EUCLIDEAN DISTANCE.  THE
C       VARIABLES SHOULD BE SCALED SIMILARLY (CLUSTER SUBROUTINE STAND
C       CAN BE USED TO STANDARDIZE THE VARIABLES).  ANY MISSING VALUES
C       WILL BE IGNORED IN THE DISTANCE CALCULATION.
C
C   3.  THE OUTPUT IS ON FORTRAN UNIT OUNIT, WHICH FOR EACH CLUSTER IS
C       THE CLUSTER LEADER AND ITS VALUES FOLLOWED BY THE OTHER
C       MEMBERS.
C
C   INPUT PARAMETERS
C   ----------------
C
C   MM    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX A.  MUST BE AT LEAST M.
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CASES.
C
C   N     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF VARIABLES.
C
C   A     REAL MATRIX WHOSE FIRST DIMENSION MUST BE MM AND WHOSE SECOND
C            DIMENSION MUST BE AT LEAST N (UNCHANGED ON OUTPUT).
C         THE MATRIX OF DATA VALUES.
C
C         A(I,J) IS THE VALUE FOR THE J-TH VARIABLE FOR THE I-TH CASE.
C
C   CLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST N.
C            (UNCHANGED ON OUTPUT).
C         THE LABELS OF THE VARIABLES.
C
C   RLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST M.
C            (UNCHANGED ON OUTPUT).
C         THE LABELS OF THE CASES.
C
C   TITLE 10-CHARACTER VARIABLE (UNCHANGED ON OUTPUT).
C         TITLE OF THE DATA SET.
C
C   THRESH REAL SCALAR (UNCHANGED ON OUTPUT).
C         THRESHOLD SUCH THAT ANY TWO CASES WHOSE DISTANCE IS LESS
C         THAN THRESH WILL BE ASSIGNED TO THE SAME CLUSTER.
C
C   XMISS REAL SCALAR (UNCHANGED ON OUTPUT).
C         MISSING VALUE CODE.  IF A(I,J) = XMISS, THEN THE VALUE FOR THE
C         J-TH VARIABLE FOR THE I-TH CASE IS ASSUMED TO BE MISSING.
C
C   NC    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         MAXIMUM NUMBER OF CLUSTERS DESIRED.
C
C   IWORK INTEGER VECTOR DIMENSIONED AT LEAST M+NC.
C         WORK VECTOR.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   REFERENCE
C   ---------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGES 74-83.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      DIMENSION A(MM,*), IWORK(*)
      INTEGER OUNIT
      CHARACTER*4 CLAB(*), RLAB(*), AA(20)
      CHARACTER*10 TITLE
C
      LL = 0
      LC = LL + NC
C
C     ASSIGN THE FIRST CASE TO THE FIRST CLUSTER
C
      KC=1
      IWORK(LL+1)=1
      DMAX=N * THRESH**2
      DO 30 I=1,M
         IWORK(LC+I)=0
         DO 20 KK=1,KC
            K=KC-KK+1
            L=IWORK(LL+K)
C
C     COMPUTES DISTANCE BETWEEN CASE AND CLUSTER LEADER
C
            DD=0.
            DC=0.
            DO 10 J=1,N
               IF (A(L,J).NE.XMISS.AND.A(I,J).NE.XMISS) THEN
                  DC=DC+1.
                  DD=DD+(A(L,J)-A(I,J))**2
C
C     GET NEXT CLUSTER IF DISTANCE IS TOO LARGE
C
                  IF(DD.GT.DMAX) GO TO 20
               ENDIF
   10       CONTINUE
            IF(DC.NE.0.) DD=SQRT(DD/DC)
C
C     ASSIGN CASE I TO CLUSTER K IF DISTANCE BELOW THRESHOLD
C
            IF (DD.LE.THRESH) THEN
               IWORK(LC+I)=K
               GO TO 30
            ENDIF
   20    CONTINUE
C
C     CREATE NEW CLUSTER AND LEADER
C
         IF (KC.NE.NC) THEN
            KC=KC+1
            IWORK(LC+I)=KC
            IWORK(LL+KC)=I
         ENDIF
   30 CONTINUE
C
C     OUTPUT CLUSTER LEADERS
C
      IF (OUNIT .LE. 0) RETURN
      WRITE(OUNIT,1)
    1 FORMAT('1 CLUSTER LEADERS')
      DO 40 K=1,KC
         I=IWORK(LL+K)
   40    WRITE(OUNIT,2) K, RLAB(I),(A(I,J),J=1,N)
    2 FORMAT(' CLUSTER',I4,2X,A4,10F11.4/(18X,10F11.4))
      WRITE(OUNIT,3)
    3 FORMAT('0')
C
C     OUTPUT CLUSTERS
C
      KC=KC+1
      DO 50 K=1,KC
         KK=K-1
         J=0
         DO 50 I=1,M
            IF (J.EQ.20) J=0
            IF (IWORK(LC+I).EQ.KK) THEN
               J=J+1
               AA(J)=RLAB(I)
            ENDIF
   50   IF(J.EQ.20.OR.(I.EQ.M.AND.J.NE.0)) WRITE(OUNIT,4) KK,(AA(JJ),
     *                                                           JJ=1,J)
    4 FORMAT(' CLUSTER',I5,20(1X,A4))
      RETURN
      END
