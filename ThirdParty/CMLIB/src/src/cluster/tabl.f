      SUBROUTINE TABL(M, X, Y, N1, N2, DMF, F)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      COMPUTES A CONTINGENCY TABLE BETWEEN COLUMNS II AND JJ OF ARRAY A
C
C   DESCRIPTION
C   -----------
C
C   1.  THE ROUTINE SCALES THE VALUES IN COLUMN II OF MATRIX A TO FALL
C       IN THE INTERVAL [1,N1], AND THE VALUES IN COLUMN JJ OF MATRIX A
C       TO FALL IN THE INTERVAL [1,N2].  THEN FOR EACH I,J SUCH THAT
C       1 <= I <= N1 AND 1 <= J <= N2, F(I,J) IS THE NUMBER OF INSTANCES
C       THE SCALED VALUE IN THE II-TH COLUMN EQUALS I AND ITS
C       CORRESPONDING SCALED VALUE IN THE JJ-TH COLUMN EQUALS J.
C
C   INPUT AND OUTPUT PARAMETERS
C   ---------------------------
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CASES.
C
C   X     REAL VECTOR DIMENSIONED AT LEAST M (UNCHANGED ON OUTPUT).
C         THE VALUES FOR THE CASES OF THE FIRST VARIABLE.
C
C   Y     REAL VECTOR DIMENSIONED AT LEAST M (UNCHANGED ON OUTPUT).
C         THE VALUES FOR THE CASES OF THE SECOND VARIABLE.
C
C   N1    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF ROWS IN THE CONTINGENCY TABLE.
C
C   N2    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF COLUMNS IN THE CONTINGENCY TABLE.
C
C   DMF   INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF THE MATRIX F.  MUST BE AT LEAST N1.
C
C   OUTPUT PARAMETER
C   ----------------
C
C   F     REAL MATRIX WHOSE FIRST DIMENSION MUST BE DMF AND WHOSE SECOND
C            DIMENSION MUST BE AT LEAST N2.
C         THE CONTINGENCY TABLE.
C
C   REFERENCE
C   ---------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGE 49.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMF
      DIMENSION X(*), Y(*), F(DMF,*)
C
C     INITIALIZE
C
      CALL RANGE(M,X,XMIN,XMAX)
      CALL RANGE(M,Y,YMIN,YMAX)
      DO 10 I=1,N1
         DO 10 J=1,N2
   10       F(I,J)=0.
C
C     COMPUTE TABLE
C
      DO 20 I=1,M
         KI=KC(X(I),XMIN,XMAX,N1)
         KJ=KC(Y(I),YMIN,YMAX,N2)
   20    F(KI,KJ)=F(KI,KJ)+1.
      RETURN
      END
