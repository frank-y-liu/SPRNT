      SUBROUTINE BDRAW(NBLOKS, NB, K, M, DMA, A, OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      OUTPUTS A BIVARIATE BLOCK HISTOGRAM
C
C   DESCRIPTION
C   -----------
C
C   1.  THE ROUTINE SEQUENTIALLY ADDS THE BLOCKS STORED IN MATRIX NB TO
C       THE DIAGRAM.  IF A BLOCK OVERLAPS AN EXISTING BLOCK, THE
C       SYMBOLS OF THE EXISTING BLOCK WILL BE RETAINED AT THE POINTS OF
C       INTERSECTION.  THEREFORE, THE SMALLEST BLOCKS WILL APPEAR
C       COMPLETE.
C
C   INPUT PARAMETERS
C   ----------------
C
C   NBLOKS INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE EXPECTED NUMBER OF BLOCKS.
C
C   NB    INTEGER VECTOR DIMENSIONED AT LEAST 4*NBLOKS (UNCHANGED ON
C            OUTPUT).
C         VECTOR STORING THE BLOCKS.
C
C         NB(           I) STORES THE FIRST ROW FOR BLOCK I.
C         NB(NBLOKS   + I) STORES THE LAST ROW FOR BLOCK I.
C         NB(2*NBLOKS + I) STORES THE FIRST COLUMN FOR BLOCK I.
C         NB(3*NBLOKS + I) STORES THE LAST COLUMN FOR BLOCK I.
C
C   K     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF COMPUTED BLOCKS.
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE ROWS AND COLUMNS IN MATRIX A.
C
C   DMA   INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE FIRST DIMENSION OF MATRIX A.  MUST BE AT LEAST M.
C
C   A     MATRIX OF 1-CHARACTER VARIABLES WHOSE FIRST DIMENSION MUST BE
C            DMA AND WHOSE SECOND DIMENSION MUST BE AT LEAST M.
C         WORK MATRIX.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGE 52.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMA, OUNIT
      DIMENSION NB(*)
      CHARACTER*1 A(DMA,*), B, H, V
      DATA B,H,V/' ','_','!'/
C
      NB1 = 0
      NB2 = NB1 + NBLOKS
      NB3 = NB2 + NBLOKS
      NB4 = NB3 + NBLOKS
C
C     CONSTRUCT BLOCKS IN REVERSE ORDER
C
      DO 10 I=1,M
         DO 10 J=1,M
   10       A(I,J)=B
      DO 30 KK=1,K
         L=K-KK+1
         I1=NB(NB1+L)*2-1
         I2=NB(NB3+L)*2
         J1=NB(NB2+L)*2-1
         J2=NB(NB4+L)*2+1
         DO 20 I=I1,I2
            DO 20 J=J1,J2
               IF(I.LT.I2.AND.I.GT.I1.AND.J.LT.J2.AND.J.GT.J1) A(I,J)=B
               IF(I.NE.I1.OR.(J.NE.J1.AND.J.NE.J2)) THEN
                  IF(I.EQ.I1.OR.I.EQ.I2) A(I,J)=H
                  IF(J.EQ.J1.OR.J.EQ.J2) A(I,J)=V
               ENDIF
   20    CONTINUE
   30 CONTINUE
      DO 40 I=1,M
   40    WRITE(OUNIT,1)(A(I,J),J=1,M)
    1 FORMAT(5X,120A1)
      RETURN
      END
