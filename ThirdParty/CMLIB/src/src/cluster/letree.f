      SUBROUTINE LETREE(MM, M, N, A, RLAB, KC, NT, TH, CWORK, DMIWRK,
     *                  IWORK, IERR, OUNIT)
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
C   PURPOSE
C   -------
C
C      USES A LEADER CLUSTERING ALGORITHM TO CONSTRUCT A TREE WHOSE
C      LEVELS ARE DETERMINED BY USER-DEFINED THRESHOLDS
C
C   DESCRIPTION
C   -----------
C
C   1.  THE TREE-LEADER ALGORITHM FOUND ON PAGES 169-176 OF THE FIRST
C       REFERENCE IS IMPLEMENTED.  THE VARIABLES SHOULD BE SCALED
C       SIMILARLY (SUBROUTINE STAND CAN BE USED TO STANDARDIZE THE
C       VARIABLES).
C
C   2.  THE THRESHOLDS REPRESENT THE LARGEST DISTANCES BETWEEN AN
C       OBSERVATION AND ITS CLUSTER LEADER.  THE THRESHOLDS MUST BE
C       INPUT IN DECREASING ORDER.
C
C   3.  THE FINAL TREE WILL BE PRINTED ON FORTRAN UNIT OUNIT.  THE
C       CLUSTERS CORRESPONDING TO THE SMALLEST THRESHOLD ARE THE
C       LEFT-MOST COLUMNS; THE CLUSTERS CORRESPONDING TO THE NEXT
C       SMALLEST THRESHOLD ARE THE NEXT SET OF COLUMNS; ETC.  THE
C       COMMAS AND QUOTE MARKS SEPARATE THE COLUMNS FOR EACH THRESHOLD.
C       THE HORIZONTAL LINES SHOW THE CLUSTER BOUNDARIES AND THE BLANK
C       SPACE BETWEEN THE LINES SHOW THE CASES THAT BELONG TO THE
C       CLUSTERS.
C
C   INPUT PARAMETERS
C   ----------------
C
C   MM    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE LEADING DIMENSION OF THE MATRIX A.  MUST BE AT LEAST M.
C
C   M     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF CASES.
C
C   N     INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF VARIABLES.
C
C   A     REAL MATRIX WHOSE FIRST DIMENSION MUST BE MM AND SECOND
C            DIMENSION MUST BE AT LEAST N (UNCHANGED ON OUTPUT).
C         THE DATA MATRIX.
C
C         A(I,J) IS THE VALUE FOR THE J-TH VARIABLE FOR THE I-TH CASE.
C
C   RLAB  VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST M
C            (UNCHANGED ON OUTPUT).
C         THE LABELS OF THE VARIABLES.
C
C   KC    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE MAXIMUM NUMBER OF NODES ALLOCATED.  KC SHOULD BE THE
C         SECOND DIMENSION OF THE MATRIX IWORK.  IF KC IS NOT LARGE
C         ENOUGH, A MESSAGE WILL BE PRINTED OUT AND THE ROUTINE WILL
C         STOP.  A GOOD GUESS FOR KC IS (M*M/2).
C
C   NT    INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE NUMBER OF THRESHOLDS.
C
C   TH    REAL VECTOR DIMENSIONED AT LEAST NT (UNCHANGED ON OUTPUT).
C         VECTOR OF THRESHOLD VALUES (MUST BE IN DECREASING ORDER!!!!).
C
C   CWORK VECTOR OF 4-CHARACTER VARIABLES DIMENSIONED AT LEAST 2*KC
C         WORK VECTOR.
C
C   DMIWRK INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         THE LEADING DIMENSION OF THE MATRIX IWORK. MUST BE AT LEAST 6.
C
C   IWORK INTEGER MATRIX WHOSE FIRST DIMENSION MUST BE DMIWRK AND WHOSE
C            SECOND DIMENSION MUST BE AT LEAST KC.
C         WORK MATRIX.
C
C   OUNIT INTEGER SCALAR (UNCHANGED ON OUTPUT).
C         UNIT NUMBER FOR OUTPUT.
C
C   OUTPUT PARAMETER
C   ----------------
C
C   IERR  INTEGER SCALAR.
C         ERROR FLAG.
C
C         IERR = 0, NO ERRORS WERE DETECTED DURING EXECUTION
C
C         IERR = 1, EITHER THE FIRST AND LAST CASES OR THE CLUSTER
C                   DIAMETER FOR A CLUSTER IS OUT OF BOUNDS.  THE
C                   CLUSTER AND ITS VALUES ARE PRINTED ON UNIT OUNIT.
C                   EXECUTION WILL CONTINUE WITH QUESTIONABLE RESULTS
C                   FOR THAT CLUSTER.
C
C         IERR = 2, THE MAXIMUM NUMBER OF NODES IS TOO SMALL.
C                   EXECUTION IS TERMINATED.  THE VALUE OF KC
C                   SHOULD BE INCREASED.
C
C   REFERENCES
C   ----------
C
C     HARTIGAN, J. A. (1975).  CLUSTERING ALGORITHMS, JOHN WILEY &
C        SONS, INC., NEW YORK.  PAGES 169-176.
C
C     HARTIGAN, J. A. (1975) PRINTER GRAPHICS FOR CLUSTERING. JOURNAL OF
C        STATISTICAL COMPUTATION AND SIMULATION. VOLUME 4,PAGES 187-213.
C
C<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
C
      INTEGER DMIWRK, OUNIT
      DIMENSION TH(*), A(MM,*), IWORK(DMIWRK,*)
      CHARACTER*4 RLAB(*), CWORK(*)
C
      IERR = 0
      CWORK(1)='NODE'
      NC=0
      DO 30 I = 1 , M
         KK=1
         LEV=1
         IF(I.NE.1) THEN
C
C     ASSIGN OBJECT TO TREE CHECKING EACH THRESHOLD
C
   10       K=KK
            D=DIST(N,A(I,1),A(IWORK(6,K),1),MM,2.)
            IF(D.LE.TH(LEV)) THEN
               LEV=LEV+1
               KK=IWORK(5,K)
               IF(KK.EQ.0) GOTO 30
               GO TO 10
            ENDIF
            KK=IWORK(4,K)
C
C     MAKE A NEW LEADER
C
            IF(KK.NE.0) GO TO 10
         ENDIF
         IF(NC.GT.0) IWORK(4,K)=NC+1
         DO 20 KK=LEV,NT
            NC=NC+1
            IF(NC.GT.KC) THEN
               IF (OUNIT .GT. 0) WRITE(OUNIT,1) KC
    1          FORMAT(I5,' NOT ENOUGH NODES')
               IERR = 2
               RETURN
            ENDIF
            CWORK(NC)=RLAB(I)
            IWORK(4,NC)=0
            IWORK(5,NC)=NC+1
            IWORK(6,NC)=I
   20    CONTINUE
         IWORK(5,NC)=0
         KK=1
         LEV=1
   30 CONTINUE
C
C     CONVERT RESULTS AND OUTPUT
C
      M1 = M + 1
      CALL CNVERT(NC,DMIWRK,IWORK,CWORK(1),M1,CWORK(KC+1))
      IF (OUNIT .GT. 0) WRITE(OUNIT,2)
   2  FORMAT('1')
      CALL TREE1(M1,NC,DMIWRK,IWORK,CWORK(KC+1),IERR,OUNIT)
      RETURN
      END
