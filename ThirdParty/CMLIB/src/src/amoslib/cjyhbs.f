      SUBROUTINE CJYHBS(Z,KODE,CJ0,CJ1,CY0,CY1,CH0,CH1)
C
C     WRITTEN BY D.E. AMOS AND S.L. DANIEL
C
C     REFERENCES
C         SLA-73-0262
C
C         NBS HANDBOOK OF MATHEMATICAL FUNCTIONS, AMS 55, BY
C         M. ABRAMOWITZ AND I.A. STEGUN, DECEMBER, 1955, PP. 364, 497.
C
C     ABSTRACT
C         CJYHBS COMPUTES BESSEL FUNCTIONS J/SUB(NU)/(Z), Y/SUB(NU)/(Z),
C         AND STRUVE FUNCTIONS H/SUB(NU)/(Z), FOR COMPLEX Z AND NU=0 OR
C         1. BACKWARD RECURSION IS USED FOR THE J BESSEL FUNCTIONS OF
C         INTEGER ORDER TO SUM THE NEUMANN SERIES FOR THE Y AND H
C         FUNCTIONS FOR 0.LT.CABS(Z).LT.30. FOR CABS(Z).GT.30 THE
C         ASYMPTOTIC EXPANSIONS ARE USED. FOR Z, CABS(Z).GT.0.
C         AND -PI.LT.ARG(Z).LE.PI
C
C     DESCRIPTION OF ARGUMENTS
C
C         INPUT
C           KODE   - A PARAMETER TO SELECT THE PROPER FUNCTION PAIRS
C                    KODE=1 RETURNS J0,J1,Y0,Y1 FUNCTIONS
C                    KODE=2 RETURNS J0,J1,H0,H1 FUNCTIONS
C                    KODE=3 RETURNS J0,J1,Y0,Y1,H0,H1 FUNCTIONS
C           Z      - COMPLEX ARGUMENT, Z.NE.CMPLX(0.,0.)
C                    AND -PI.LT.ARG(Z).LE.PI
C
C         OUTPUT
C           CJ0    - BESSEL FUNCTION J/SUB(0)/(Z), A COMPLEX NUMBER
C           CJ1    - BESSEL FUNCTION J/SUB(1)/(Z), A COMPLEX NUMBER
C           CY0    - BESSEL FUNCTION Y/SUB(0)/(Z), A COMPLEX NUMBER
C           CY1    - BESSEL FUNCTION Y/SUB(1)/(Z), A COMPLEX NUMBER
C           CH0    - STRUVE FUNCTION H/SUB(0)/(Z), A COMPLEX NUMBER
C           CH1    - STRUVE FUNCTION H/SUB(1)/(Z), A COMPLEX NUMBER
C
C     ERROR CONDITIONS
C         ERROR #1, Z=0  ON INPUT, A FATAL ERROR
C         ERROR #2, KODE NOT 1 OR 2 OR 3 ON INPUT, A FATAL ERROR
C
C
C
C     OTHER ROUTINES CALLED: (NONE)
C
      COMPLEX Z,CJ0,CJ1,CY0,CY1,ZLAM(70),CAPJ(71),CAPR(71),SN,CONE,CTWO,
     1TN,C1,C2,C3,C4,C5,C6,CR,TOPI,FOPI,CSUM,CK,SK,CZERO,CH0,CH1,Z1
      DATA EULER/5.77215664901533E-1/
      DATA PIO2/1.57079632679490/
      DATA ISET/1/
C
      ZABS=CABS(Z)
      IF(ZABS.EQ.0.) GO TO 90
      IF(KODE.LT.1.OR.KODE.GT.3) GO TO 91
      GO TO (1,2),ISET
    1 ISET=2
C
      C1=CMPLX(0.,-2.)
      C2=CMPLX(-2.,0.)
      C3=CMPLX(0.,2.)
      C4=CMPLX(2.,0.)
      K=1
      DO 3 J=1,17
      ZLAM(K)=C1
      ZLAM(K+1)=C2
      ZLAM(K+2)=C3
      ZLAM(K+3)=C4
    3 K=K+4
      ZLAM(K)=C1
      ZLAM(K+1)=C2
      PI=3.14159265358979
      TRPI=2./PI
      TOPI=CMPLX(TRPI,0.)
      FOPI=CMPLX(4./PI,0.)
      RTOPI=SQRT(TRPI)
      CTWO=CMPLX(2.,0.)
      CONE=CMPLX(1.,0.)
      CZERO=CMPLX(0.,0.)
    2 CONTINUE
      X=REAL(Z)
      Y=AIMAG(Z)
      IF(X) 4,5,6
    4 IF(Y) 9,8,7
    9 THETA1=ATAN(Y/X)
      THETA=THETA1-PI
      SGN=-2.
      GO TO 50
    5 IF(Y) 11,90,13
   11 THETA=-PIO2
      THETA1=THETA
      GO TO 50
   13 THETA=PIO2
      THETA1=THETA
      GO TO 50
    7 THETA1=ATAN(Y/X)
      THETA=THETA1+PI
      SGN=2.
      GO TO 50
 8    THETA1=0.
      THETA=PI
      SGN=2.
      GO TO 50
    6 THETA1=ATAN(Y/X)
      THETA=THETA1
   50 CONTINUE
C
C     BACKWARD RECURSION FOR J/SUBK/(X),K=0,1,...
C
      IF(ZABS.GE.30.) GO TO 200
      NU=IFIX(ZABS)+40
      NUP1=NU+1
      FN=NU
      AY=ABS(Y)
      Z1=CMPLX(X,AY)
      SN=CZERO
      CAPR(NUP1)=SN
      TN=CMPLX(FN+FN,0.)
      DO 10 I=1,NU
      L=NUP1-I
      CR=Z1/(TN-Z1*CAPR(L+1))
      CAPR(L)=CR
      SN=CR*(ZLAM(L)+SN)
      TN=TN-CTWO
   10 CONTINUE
      SN=SN+CONE
      EY=EXP(AY)
      CAPJ(1)=CMPLX(EY*COS(X),-EY*SIN(X))/SN
      DO 15 I=1,NU
      CAPJ(I+1)=CAPJ(I)*CAPR(I)
   15 CONTINUE
      IF(Y.GE.0.) GO TO 17
      DO 16 I=1,NUP1
   16 CAPJ(I)=CONJG(CAPJ(I))
 17   CJ1=CAPJ(2)
      CJ0=CAPJ(1)
      IF(KODE.EQ.2) GO TO 100
C
C     NEUMANN SERIES FOR Y0
C
      K0=(NU-1)/2
      K1=(NU-2)/2
      C1=CMPLX(ALOG(ZABS*.5)+EULER,THETA)
      C2=C1-CONE
      SK=-CONE
      CK=CONE
      CSUM=CZERO
      DO 20 I=1,K0
      CSUM=CSUM+SK*CAPJ(I+I+1)/CK
      SK=-SK
      CK=CK+CONE
   20 CONTINUE
      CY0=TOPI*(C1*CAPJ(1)-(CSUM+CSUM))
C
C     NEUMANN SERIES FOR Y1
C
      C3=CTWO
      C4=CTWO+CONE
      C5=CONE
      SK=-CONE
      CSUM=CZERO
      DO 25 I=1,K1
      CSUM=CSUM+SK*(C4/C3)*CAPJ(I+I+2)/C5
      SK=-SK
      C3=C3+CONE
      C4=C4+CTWO
      C5=C5+CONE
   25 CONTINUE
      CY1=TOPI*(-CAPJ(1)/Z+C2*CAPJ(2)-CSUM)
      IF(KODE.EQ.1) RETURN
C
C     NEUMANN SERIES FOR H0 AND H1
C
  100 CONTINUE
      KH=NU/2
      CK=CONE+CTWO
      C1=CONE
      C4=CZERO
      C3=C4
      L=2
      DO 30 K=1,KH
      C3=C3+CAPJ(L)/C1
      C4=C4+CAPJ(L+1)/(C1*CK)
      C1=CK
      CK=CK+CTWO
      L=L+2
   30 CONTINUE
      CH0=FOPI*C3
      CH1=TOPI*(CONE-CAPJ(1)+C4+C4)
      RETURN
C
  200 CONTINUE
C
C     ASYMPTOTIC EXPANSIONS FOR Y0,Y1,J0,J1,ABS(Z).GE.30
C
      THETA1=THETA1*.5
      CR=CMPLX(COS(THETA1),-SIN(THETA1))
      CR=(RTOPI/SQRT(ZABS))*CR
C     FOR ABS(Z).GT.30
      IF(X.GE.0.) GO TO 207
      Y=-Y
 207  CONTINUE
      AX=ABS(X)
      Z1=CMPLX(AX,Y)
      DO 205 L=1,2
      NU=L-1
      TN=4*NU*NU
      SN=CMPLX(AX-(FLOAT(NU)*.5+.25)*PI,Y)
      C2=CZERO
      CK=CONE
      C1=CONE
      SK=CONE
      C4=8.*Z1
      C3=C4
      DO 40 K=1,16
      CK=CK*((TN-SK*SK)/C3)
      IF(MOD(K,2).EQ.0) GO TO 42
      C2=C2+CK
      CK=-CK
      GO TO 44
   42 C1=C1+CK
      GO TO 44
   44 IF(CABS(CK).LT.1.E-13) GO TO 45
      C3=C3+C4
      SK=SK+CTWO
   40 CONTINUE
   45 CONTINUE
      C5=CCOS(SN)
      C6=CSIN(SN)
      GO TO (201,202),L
 201  CY0=CR*(C1*C6+C2*C5)
      CJ0=CR*(C1*C5-C2*C6)
      GO TO 205
 202  CY1=CR*(C1*C6+C2*C5)
      CJ1=CR*(C1*C5-C2*C6)
  205 CONTINUE
      IF(X.GE.0.) GO TO 206
C     FORMULA FOR Z=-Z1, -PI/2..LT.ARG(Z1).LT.PI/2.
      CY0=CY0+CMPLX(0.0,SGN)*CJ0
      CY1=-CY1-CMPLX(0.0,SGN)*CJ1
      CJ1=-CJ1
  206 CONTINUE
      IF(KODE.EQ.1) RETURN
C
C     ASYMPTOTIC EXPANSIONS FOR H0,H1,ABS(Z).GE.30
C
      CK=CONE/Z
      CSUM=CK
      SK=CONE
      CR=CK*CK
      DO 60 K=1,8
      CK=-CK*SK*SK*CR
      CSUM=CSUM+CK
      IF(CABS(CK).LT.1.E-14) GO TO 62
      SK=SK+CTWO
   60 CONTINUE
 62   CH0=CY0+TOPI*CSUM
      CK=CR
      CSUM=CR
      C1=CONE
      C2=C1+CTWO
      DO 64 K=1,8
      CK=-CK*(C1*C2*CR)
      CSUM=CSUM+CK
      IF(CABS(CK).LT.1.E-14) GO TO 66
      C1=C2
      C2=C2+CTWO
   64 CONTINUE
 66   CH1=CY1+TOPI*(CONE+CSUM)
      RETURN
 90   CALL XERROR('CJHYBS, Z IS ZERO',17,1,2)
      RETURN
 91   CALL XERROR('CJHYBS, KODE NOT 1, 2, OR 3',27,2,2)
      RETURN
      END
