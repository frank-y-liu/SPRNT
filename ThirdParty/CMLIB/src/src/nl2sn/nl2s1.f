      SUBROUTINE NL2S1(N, P, X, CALCR, CALCJ, IV, LIV, LV, V,
     1                 UIPARM, URPARM, UFPARM)
C
C  ***  VERSION OF NL2SOL THAT CALLS NL2IT  ***
C
C  ***  PARAMETERS  ***
C
      INTEGER N, P, LIV, LV
C/6
C     INTEGER IV(LIV), UIPARM(1)
C     REAL X(P), V(LV), URPARM(1)
C/7
      INTEGER IV(LIV), UIPARM(*)
      REAL X(P), V(LV), URPARM(*)
C/
      EXTERNAL CALCR, CALCJ, UFPARM
C
C  ***  DISCUSSION  ***
C
C        LIV GIVES THE LENGTH OF IV.  IT MUST BE AT LEAST 80+P.  IF NOT,
C     THEN NL2S1 RETURNS WITH IV(1) = 15.  WHEN NL2S1 RETURNS, THE
C     MINIMUM ACCEPTABLE VALUE OF LIV IS STORED IN IV(LASTIV) = IV(44),
C     (PROVIDED THAT LIV .GE. 44).
C
C        LV GIVES THE LENGTH OF V.  THERE ARE TWO POSSIBLE RANGES FOR
C     LV.  IN WHAT FOLLOWS, THEY ARE EXPRESSED IN TERMS OF LV0...
C     LV0 = 105 + P*(N + 2*P + 17) + N + RDLEN(IV(RDREQ)),  WHERE
C     RDLEN(0) = 0, RDLEN(1) = RDLEN(2) = N, AND RDLEN(3) = 2*N.
C
C        IF LV IS AT LEAST LV0 + N, THEN AN OLD COPY OF R IS SAVED TO
C     AVOID HAVING TO RECOMPUTE IT UNDER CERTAIN CONDITIONS.
C     IF LV IS SMALLER THAN LV0, THEN NL2S1 RETURNS WITH IV(1) = 16.
C     WHEN NL2S1 RETURNS, THE MINIMUM ACCEPTABLE VALUE OF LV IS STORED
C     IN IV(LASTV) = IV(45) (PROVIDED LV .GE. 45).
C
C        RETURN CODES AND CONVERGENCE TOLERANCES ARE THE SAME AS FOR
C     NL2SOL, WITH SOME SMALL EXTENSIONS... IV(1) = 15 MEANS LIV WAS
C     TOO SMALL.   IV(1) = 16 MEANS LV WAS TOO SMALL.
C
C        THERE ARE TWO NEW V INPUT COMPONENTS...  V(LMAXS) = V(36) AND
C     V(SCTOL) = V(37) SERVE WHERE V(LMAX0) AND V(RFCTOL) FORMERLY DID
C     IN THE SINGULAR CONVERGENCE TEST -- SEE THE NL2SOL DOCUMENTATION.
C
C  ***  DEFAULT VALUES  ***
C
C        DEFAULT VALUES ARE PROVIDED BY SUBROUTINE DEFLT, RATHER THAN
C     DFAULT.  THE CALLING SEQUENCE IS...
C             CALL DEFLT(1, IV, LIV, LV, V)
C     THE FIRST PARAMETER IS AN INTEGER 1.  IF LIV AND LV ARE LARGE
C     ENOUGH FOR DEFLT, THEN DEFLT SETS IV(1) TO 12.  OTHERWISE IT
C     SETS IV(1) TO 15 OR 16.  CALLING NL2S1 WITH IV(1) = 0 CAUSES ALL
C     DEFAULT VALUES TO BE USED FOR THE INPUT COMPONENTS OF IV AND V.
C        IF YOU FIRST CALL DEFLT, THEN SET IV(1) TO 13 AND CALL NL2S1,
C     THEN STORAGE ALLOCATION ONLY WILL BE PERFORMED.  IN PARTICULAR,
C     IV(D) = IV(27), IV(J) = IV(70), AND IV(R) = IV(61) WILL BE SET
C     TO THE FIRST SUBSCRIPT IN V OF THE SCALE VECTOR, THE JACOBIAN
C     MATRIX, AND THE RESIDUAL VECTOR RESPECTIVELY, PROVIDED LIV AND LV
C     ARE LARGE ENOUGH.  IF SO, THEN NL2S1 RETURNS WITH IV(1) = 14.
C     WHEN CALLED WITH IV(1) = 14, NL2S1 ASSUMES THAT STORAGE HAS
C     BEEN ALLOCATED, AND IT BEGINS THE MINIMIZATION ALGORITHM.
C
C  ***  SCALE VECTOR  ***
C
C        ONE DIFFERENCE WITH NL2SOL IS THAT THE SCALE VECTOR D IS
C     STORED IN V, STARTING AT A DIFFERENT SUBSCRIPT.  THE STARTING
C     SUBSCRIPT VALUE IS STILL STORED IN IV(D) = IV(27).  THE
C     DISCUSSION OF DEFAULT VALUES ABOVE TELLS HOW TO HAVE IV(D) SET
C     BEFORE THE ALGORITHM IS STARTED.
C
C  ***  REGRESSION DIAGNOSTICS  ***
C
C        IF IV(RDREQ) SO DICTATES, THEN ESTIMATES ARE COMPUTED OF THE
C     INFLUENCE EACH RESIDUAL COMPONENT HAS ON THE FINAL PARAMETER
C     ESTIMATE X.  THE GENERAL IDEA IS THAT ONE MAY WISH TO EXAMINE
C     RESIDUAL COMPONENTS (AND THE DATA BEHIND THEM) FOR WHICH THE
C     INFLUENCE ESTIMATE IS SIGNIFICANTLY LARGER THAN MOST OF THE OTHER
C     INFLUENCE ESTIMATES.  TWO SLIGHTLY DIFFERING SUCH ESTIMATES,
C     HEREAFTER CALLED REGRESSION DIAGNOSTICS, MAY BE COMPUTED...
C     IF IV(RDREQ) = 1, THEN FOR I = 1(1)N,
C                    SQRT( G(I)**T * H(I)**-1 * G(I) )
C     IS COMPUTED AND STORED IN V, STARTING AT V(IV(REGD)), WHERE
C     RDREQ = 57 AND REGD = 67.  HERE G(I) STANDS FOR THE GRADIENT
C     RESULTING WHEN THE I-TH OBSERVATION IS DELETED AND H(I) STANDS
C     FOR AN APPROXIMATION TO THE CORRESPONDING HESSIAN AT X, THE SOLU-
C     TION CORRESPONDING TO ALL OBSERVATIONS.  (THIS APPROXIMATION IS
C     OBTAINED BY SUBTRACTING THE FIRST-ORDER CONTRIBUTION OF THE I-TH
C     OBSERVATION TO THE HESSIAN FROM A FINITE-DIFFERENCE HESSIAN
C     APPROXIMATION.)  IF IV(RDREQ) = 2 AND H, THE FINITE-DIFFERENCE
C     HESSIAN, IS POSITIVE DEFINITE, THEN FOR I = 1(1)N,
C            SQRT( G(I)**T * H(I)**-1 * H * H(I)**-1 * G(I) )
C     IS STORED IN V, AGAIN STARTING AT V(IV(REGD)).  (IF H IS
C     INDEFINITE, THEN IV(REGD) IS SET TO -1.  IF H(I) IS INDEFINITE,
C     THEN -1 IS RETURNED AS THE DIAGNOSTIC FOR OBSERVATION I.  IF NO
C     DIAGNOSTICS ARE COMPUTED, PERHAPS BECAUSE OF A FAILURE TO
C     CONVERGE, THEN IV(REGD) = 0 IS RETURNED.)
C        IF IV(RDREQ) = 3, THEN BOTH SETS OF DIAGNOSTICS ARE COMPUTED.
C     THOSE FOR IV(RDREQ) = 1 ARE STORED AS DESCRIBED ABOVE, AND THOSE
C     FOR IV(RDREQ) ARE STORED IMMEDIATELY THEREAFTER, I.E., IN V,
C     STARTING AT V(IV(REGD)+N).
C        PRINTING OF THE REGRESSION DIAGNOSTICS IS CONTROLLED BY
C     IV(COVPRT) = IV(14)...  IF IV(COVPRT) = 3, THEN BOTH THE
C     COVARIANCE MATRIX AND THE REGRESSION DIAGNOSTICS ARE PRINTED.
C     IV(COVPRT) = 2 CAUSES ONLY THE REGRESSION DIAGNOSTICS TO BE
C     PRINTED, IV(COVPRT) = 1 CAUSES ONLY THE COVARIANCE MATRIX TO BE
C     PRINTED, AND IV(COVPRT) = 0 CAUSES NEITHER TO BE PRINTED.
C
C        RDREQ = 57 AND REGD = 67.
C
C  ***  GENERAL  ***
C
C     CODED BY DAVID M. GAY.
C
C+++++++++++++++++++++++++++  DECLARATIONS  +++++++++++++++++++++++++++
C
C  ***  EXTERNAL SUBROUTINES  ***
C
      EXTERNAL DEFLT, NL2IT, MLPRDP
C DEFLT.... PROVIDES DEFAULT IV AND V INPUT COMPONENTS.
C NL2IT.... CARRIES OUT OPTIMIZATION ITERATIONS.
C MLPRDP... PRINTS REGRESSION DIAGNOSTICS.
C
C  ***  INTRINSIC FUNCTIONS  ***
C/+
      INTEGER IABS
C/
C
C  ***  LOCAL VARIABLES  ***
C
      LOGICAL ONERD, RSAVE, TWORD
      INTEGER D1, DR1, IN, IV1, NF, RD1, RD2, RSAVE1, R1
C
C  ***  IV COMPONENTS  ***
C
      INTEGER D, J, LASTV, MODE, NEXTV, NF0, NF1, NFCALL, NFGCAL, R,
     1        RDREQ, REGD, TOOBIG, VNEED
C/6
C     DATA D/27/, J/70/, LASTV/45/, MODE/35/, NEXTV/47/, NF0/68/,
C    1     NF1/69/, NFCALL/6/, NFGCAL/7/, R/61/, RDREQ/57/, REGD/67/,
C    2     TOOBIG/2/, VNEED/4/
C/7
      PARAMETER (D=27, J=70, LASTV=45, MODE=35, NEXTV=47, NF0=68,
     1           NF1=69, NFCALL=6, NFGCAL=7, R=61, RDREQ=57, REGD=67,
     2           TOOBIG=2, VNEED=4)
C/
C---------------------------------  BODY  ------------------------------
C
      IF (IV(1) .EQ. 0) CALL DEFLT(1, IV, LIV, LV, V)
      IV1 = IV(1)
      ONERD = IV(RDREQ) .GE. 1
      TWORD = IV(RDREQ) .GE. 3
      IF (IV1 .EQ. 14) GO TO 10
      IF (IV1 .GT. 2 .AND. IV1 .LT. 12) GO TO 10
      IF (IV1 .EQ. 12) IV(1) = 13
      R1 = 1
      D1 = 1
      DR1 = 1
      RD1 = 1
      RD2 = 1
      RSAVE = .FALSE.
      GO TO 20
C
 10   D1 = IV(D)
      DR1 = IV(J)
      R1 = IV(R)
      RD1 = R1
      IF (ONERD) RD1 = RD1 + N
      RD2 = RD1
      IF (TWORD) RD2 = RD2 + N
      RSAVE1 = RD2 + N
      IF (ONERD) RSAVE1 = RSAVE1 + N
      RSAVE = RSAVE1 + N .LE. DR1
C
 20   IN = IV(VNEED) + P + N*(P+1)
      IF (ONERD) IN = IN + N
      IF (TWORD) IN = IN + N
      IF (RSAVE) IN = IN + N
      IV(VNEED) = IN
C
 30   CALL NL2IT(V(D1), V(DR1), IV, LIV, LV, N, 1, 1, N, P, V(R1),
     1           V(RD1), V(RD2), V, X)
      IF (IABS(IV(1))-2) 50, 40, 80
C
C   ***  NEW GRADIENT REQUESTED -- MAKE SURE R IS CURRENT  ***
C
 40   NF = IV(NFGCAL)
      IF (NF .EQ. IV(NF1)) GO TO 70
         IF (NF .NE. IV(NF0)) GO TO 60
              CALL SCOPY(N, V(R1),1, V(RSAVE1),1)
              IV(NF1) = IV(NF0)
              GO TO 70
C
C  ***  NEW FUNCTION VALUE (R VALUE) NEEDED -- SAVE OLD ONE FIRST  ***
C
 50   NF = IV(NFCALL)
      IF (IV(MODE) .NE. 0 .OR. .NOT. RSAVE) GO TO 60
         CALL SCOPY(N, V(RSAVE1),1, V(R1),1)
         IV(NF0) = IV(NF1)
C
 60   CALL CALCR(N, P, X, NF, V(R1), UIPARM, URPARM, UFPARM)
      IV(NF1) = NF
      IF (NF .LE. 0) IV(TOOBIG) = 1
      IF (IV(1) .EQ. 1) GO TO 30
C
C  ***  COMPUTE DR = GRADIENT OF R COMPONENTS  ***
C
 70   IF (IV(1) .LT. 0) GO TO 30
      CALL CALCJ(N, P, X, IV(NFGCAL), V(DR1), UIPARM, URPARM, UFPARM)
      IF (IV(NFGCAL) .EQ. 0) IV(TOOBIG) = 1
      GO TO 30
C
C  ***  STORAGE ALLOCATION  ***
C
 80   IF (IV(1) .NE. 14) GO TO 100
      IV(D) = IV(NEXTV)
      IV(R) = IV(D) + P
      IN = IV(R) + N
      IF (ONERD) IN = IN + N
      IF (TWORD) IN = IN + N
      IF (IN + N*(P+1) .GT. LV + 1) GO TO 90
         IN = IN + N
         IV(LASTV) = IV(LASTV) + N
 90   IV(J) = IN
      IV(NEXTV) = IN + N*P
      IV(NF0) = 0
      IV(NF1) = 0
      IF (IV1 .EQ. 13) GO TO 999
      GO TO 10
C
 100  IF (IV(REGD) .GT. 0) IV(REGD) = RD1
      CALL MLPRDP(IV, LIV, LV, N, V(RD1), V(RD2), V)
C
 999  RETURN
C
C  ***  LAST CARD OF NL2S1 FOLLOWS  ***
      END
