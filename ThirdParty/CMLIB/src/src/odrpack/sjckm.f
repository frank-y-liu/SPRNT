*SJCKM
      SUBROUTINE SJCKM
     +   (FUN,N,NP,M,XPLUSD,LDXPD,BETA,TYPJ,ETA,TOL,EPSMAC,
     +   J,NROW,PV,D,
     +   PVTEMP,ISWRTB,MSG,LMSG,IFLAG)
C***BEGIN PROLOGUE  SJCKM
C***REFER TO  SODR,SODRC
C***ROUTINES CALLED  SJCKC,SJCKZ,SPVB,SPVD
C***DATE WRITTEN   860529   (YYMMDD)
C***REVISION DATE  870204   (YYMMDD)
C***CATEGORY NO.  G2E,I1B1
C***KEYWORDS  ORTHOGONAL DISTANCE REGRESSION,
C             NONLINEAR LEAST SQUARES,
C             ERRORS IN VARIABLES
C***AUTHOR  BOGGS, PAUL T.
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, GAITHERSBURG, MD 20899
C           BYRD, RICHARD H.
C             DEPARTMENT OF COMPUTER SCIENCE
C             UNIVERSITY OF COLORADO, BOULDER, CO 80309
C           DONALDSON, JANET R.
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, BOULDER, CO 80303-3328
C           SCHNABEL, ROBERT B.
C             DEPARTMENT OF COMPUTER SCIENCE
C             UNIVERSITY OF COLORADO, BOULDER, CO 80309
C             AND
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, BOULDER, CO 80303-3328
C***PURPOSE  CHECK USER-SUPPLIED ANALYTIC DERIVATIVES AGAINST NUMERICAL
C            DERIVATIVES
C            (THIS ROUTINE IS MODELED AFTER STARPAC SUBROUTINE DCKMN.)
C***END PROLOGUE  SJCKM
C
C  EXTERNALS
C
      EXTERNAL FUN
C        THE NAME OF USER-SUPPLIED ROUTINE FOR COMPUTING THE MODEL.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE SECTION V.B,
C        ARGUMENT FUN.)
      EXTERNAL JAC
C        THE NAME OF USER-SUPPLIED ROUTINE FOR COMPUTING THE JACOBIANS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE SECTION V.B,
C        ARGUMENT JAC.)
C
C  FUNCTION DECLARATIONS
C
      REAL SPVB, SPVD
C
C  VARIABLE DECLARATIONS (ALPHABETICALLY)
C
      REAL BETA(NP)
C        THE FUNCTION PARAMETERS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      REAL D
C        THE SCALAR IN WHICH ROW   NROW   OF THE DERIVATIVE
C        MATRIX WITH RESPECT TO THE JTH UNKNOWN PARAMETER
C        IS STORED.
      REAL EPSMAC
C        THE VALUE OF MACHINE PRECISION.
      REAL ETA
C        THE RELATIVE NOISE IN THE MODEL
      REAL FD
C        THE FORWARD DIFFERENCE QUOTIENT DERIVATIVE WITH RESPECT TO THE
C        JTH PARAMETER
      INTEGER IFLAG
C        AN INDICATOR VARIABLE, USED PRIMARILY TO DESIGNATE THAT THE
C        USER WISHES THE COMPUTATIONS STOPPED.
      LOGICAL ISWRTB
C        THE CONTROL VALUE DETERMINING WHETHER THE DERIVATIVES WRT
C        BETA (ISWRTB=TRUE) OR DELTA(ISWRTB=FALSE) ARE BEING CHECKED.
      INTEGER J
C        THE INDEX OF THE PARTIAL DERIVATIVE BEING EXAMINED.
      INTEGER LDXPD
C        THE LEADING DIMENSION OF ARRAY XPLUSD.
      INTEGER LMSG
C        THE LENGTH OF THE VECTOR MSG.
      INTEGER M
C        THE NUMBER OF COLUMNS OF DATA IN THE INDEPENDENT VARIABLE.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER MSG(LMSG)
C        THE ERROR CHECKING RESULTS.
      INTEGER N
C        THE NUMBER OF OBSERVATIONS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER NP
C        THE NUMBER OF FUNCTION PARAMETERS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER NROW
C        THE NUMBER OF THE ROW OF THE INDEPENDENT VARIABLE ARRAY AT
C        WHICH THE DERIVATIVE IS TO BE CHECKED.
      REAL ONE
C         THE VALUE 1.0E0.
      REAL PARMX
C        THE MAXIMUM OF THE CURRENT PARAMETER ESTIMATE AND THE
C        TYPICAL VALUE OF THAT PARAMETER
      REAL PV
C        THE SCALAR IN WHICH THE PREDICTED VALUE FROM THE MODEL FOR
C        ROW   NROW   IS STORED.
      REAL PVPSTP
C        THE PREDICTED VALUE FOR ROW    NROW   OF THE MODEL
C        BASED ON THE CURRENT PARAMETER ESTIMATES
C        FOR ALL BUT THE JTH PARAMETER VALUE, WHICH IS BETA(J) + STP.
      REAL PVTEMP(N)
C        THE VECTOR OF PREDICTED VALUES FROM THE MODEL.
      REAL STP
C        THE STEP SIZE CURRENTLY BEING EXAMINED FOR THE FINITE DIFFERENC
C        DERIVATIVE
      REAL TOL
C        THE AGREEMENT TOLERANCE.
      REAL TYPJ
C        THE TYPICAL SIZE OF THE J-TH UNKNOWN BETA OR DELTA.
      REAL XPLUSD(LDXPD,M)
C        THE ARRAY X + DELTA.
      REAL ZERO
C         THE VALUE 0.0E0.
C
C
      DATA ZERO,ONE/0.0E0,1.0E0/
C
C
C***FIRST EXECUTABLE STATEMENT  SJCKM
C
C
C  CALCULATE THE JTH PARTIAL DERIVATIVE USING FORWARD DIFFERENCE
C  QUOTIENTS AND DECIDE IF IT AGREES WITH USER SUPPLIED VALUES
C
      MSG(J+1) = 0
C
      IF (ISWRTB) THEN
C
C  PERFORM COMPUTATIONS FOR DERIVATIVES WRT BETA
C
         PARMX = MAX(ABS(BETA(J)),ABS(TYPJ))
         STP = (SQRT(ETA)*PARMX*SIGN(ONE,BETA(J))+BETA(J)) - BETA(J)
         PVPSTP = SPVB(FUN,N,NP,M,BETA,XPLUSD,LDXPD,PVTEMP,
     +                 NROW,J,STP,IFLAG)
      ELSE
C
C  PERFORM COMPUTATIONS FOR DERIVATIVES WRT DELTA
C
         PARMX = MAX(ABS(XPLUSD(NROW,J)),ABS(TYPJ))
         STP = (SQRT(ETA)*PARMX*SIGN(ONE,XPLUSD(NROW,J))+XPLUSD(NROW,J))
     +         - XPLUSD(NROW,J)
         PVPSTP = SPVD(FUN,N,NP,M,BETA,XPLUSD,LDXPD,PVTEMP,
     +                  NROW,J,STP,IFLAG)
      END IF
      IF (IFLAG.LT.0) THEN
         RETURN
      END IF
C
      FD = (PVPSTP-PV)/STP
C
C  CHECK FOR DISAGREEMENT
C
      IF (ABS(FD-D).LE.TOL*ABS(D)) THEN
C
C  NUMERICAL AND ANALYTIC DERIVATIVES AGREE
C
C  CHECK IF ANALYTIC DERIVATIVE IS IDENTICALLY ZERO, INDICATING
C  THE POSSIBILITY THAT THE DERIVATIVE SHOULD BE RECHECKED AT
C  ANOTHER POINT.
C
         IF (D.EQ.ZERO) THEN
C
C  JTH ANALYTIC AND NUMERICAL DERIVATIVES BOTH ARE ZERO.
C  SET MSG FLAG ACCORDINGLY.
C
            IF (MSG(1).EQ.0) MSG(1) = 2
            MSG(J+1) = 2
         END IF
C
      ELSE
C
C  NUMERICAL AND ANALYTIC DERIVATIVES DISAGREE
C
C  CHECK WHY
C
         IF (D.EQ.ZERO) THEN
            CALL SJCKZ(FUN,N,NP,M,XPLUSD,LDXPD,BETA,EPSMAC,
     +                  J,NROW,PV,FD,PARMX,PVPSTP,STP,
     +                  PVTEMP,ISWRTB,MSG,LMSG,IFLAG)
         ELSE
            CALL SJCKC(FUN,N,NP,M,XPLUSD,LDXPD,BETA,ETA,TOL,EPSMAC,
     +                  J,NROW,PV,D,FD,PARMX,PVPSTP,STP,
     +                  PVTEMP,ISWRTB,MSG,LMSG,IFLAG)
         END IF
      END IF
C
      RETURN
      END
