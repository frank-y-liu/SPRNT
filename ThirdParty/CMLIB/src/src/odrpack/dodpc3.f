*DODPC3
      SUBROUTINE DODPC3
     +   (IPR,LUNRPT,
     +   N,M,NP,
     +   INFO,NJEV,NFEV,RCOND,IRANK,
     +   RNORM,DELWTD,FWTD,
     +   BETA,F,ISODR,DELTA)
C***BEGIN PROLOGUE  DODPC3
C***REFER TO  DODR,DODRC
C***ROUTINES CALLED  DNRM2
C***DATE WRITTEN   860529   (YYMMDD)
C***REVISION DATE  870204   (YYMMDD)
C***CATEGORY NO.  G2E,I1B1
C***KEYWORDS  ORTHOGONAL DISTANCE REGRESSION,
C             NONLINEAR LEAST SQUARES,
C             ERRORS IN VARIABLES
C***AUTHOR  BOGGS, PAUL T.
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, GAITHERSBURG, MD 20899
C           BYRD, RICHARD H.
C             DEPARTMENT OF COMPUTER SCIENCE
C             UNIVERSITY OF COLORADO, BOULDER, CO 80309
C           DONALDSON, JANET R.
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, BOULDER, CO 80303-3328
C           SCHNABEL, ROBERT B.
C             DEPARTMENT OF COMPUTER SCIENCE
C             UNIVERSITY OF COLORADO, BOULDER, CO 80309
C             AND
C             OPTIMIZATION GROUP/SCIENTIFIC COMPUTING DIVISION
C             NATIONAL BUREAU OF STANDARDS, BOULDER, CO 80303-3328
C***PURPOSE  GENERATE FINAL SUMMARY REPORT
C***END PROLOGUE  DODPC3
C
C  FUNCTION DECLARATIONS
C
      DOUBLE PRECISION DNRM2
C
C  VARIABLE DECLARATIONS (ALPHABETICALLY)
C
      DOUBLE PRECISION BETA(NP)
C        THE FUNCTION PARAMETERS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      DOUBLE PRECISION DELTA(N,M)
C        THE ESTIMATED ERRORS IN THE INDEPENDENT VARIABLES.
      DOUBLE PRECISION DELWTD(N,M)
C        THE WEIGHTED ESTIMATED ERRORS IN THE INDEPENDENT VARIABLES.
      DOUBLE PRECISION F(N)
C        THE (WEIGHTED) ESTIMATED VALUES OF EPSILON.
      CHARACTER*90 FMT1
C        A CHARACTER VARIABLE USED FOR FORMATS.
      DOUBLE PRECISION FWTD(N)
C        THE WEIGHTED ESTIMATED VALUES OF EPSILON.
      INTEGER I
C        AN INDEXING VARIABLE.
      INTEGER INFO
C        AN INDICATOR VARIABLE, USED PRIMARILY TO DESIGNATE WHY THE
C        COMPUTATIONS WERE STOPPED.
      INTEGER INFO1
C        THE FIRST DIGIT OF INFO.
      INTEGER INFO2
C        THE SECOND DIGIT OF INFO.
      INTEGER INFO3
C        THE THIRD DIGIT OF INFO.
      INTEGER IPR
C        THE VALUE WHICH CONTROLS THE REPORT BEING PRINTED.
      INTEGER IRANK
C        THE RANK DEFICIENCY OF THE JACOBIAN WRT BETA.
      LOGICAL ISODR
C        THE INDICATOR VARIABLE USED TO DESIGNATE WHETHER THE SOLUTION
C        IS TO BE FOUND BY ODR (ISODR=.TRUE.) OR BY OLS (ISODR=.FALSE.).
      INTEGER J
C        AN INDEXING VARIABLE.
      INTEGER K
C        AN INDEXING VARIABLE.
      INTEGER L
C        AN INDEXING VARIABLE.
      INTEGER LAST
C        THE LAST ROW OF THE GIVEN ARRAY TO BE PRINTED.
      INTEGER LUNRPT
C        THE LOGICAL UNIT NUMBER USED FOR COMPUTATION REPORTS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER M
C        THE NUMBER OF COLUMNS OF DATA IN THE INDEPENDENT VARIABLE.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER MAXLST
C        THE MAXIMUM NUMBER OF ITEMS TO BE PRINTED.
      INTEGER N
C        THE NUMBER OF OBSERVATIONS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER NFEV
C        THE NUMBER OF FUNCTION EVALUATIONS.
      INTEGER NJEV
C        THE NUMBER OF JACOBIAN EVALUATIONS.
      INTEGER NP
C        THE NUMBER OF FUNCTION PARAMETERS.
C        (FOR DETAILS, SEE ODRPACK REFERENCE GUIDE.)
      INTEGER NPLM1
C        THE NUMBER OF ITEMS TO BE PRINTED PER LINE, MINUS ONE.
      DOUBLE PRECISION RCOND
C        THE APPROXIMATE RECIPROCAL CONDITION OF TFJACB.
      DOUBLE PRECISION RNORM
C        THE NORM OF THE WEIGHTED OBSERVATIONAL ERRORS.
      DOUBLE PRECISION ZERO
C          THE VALUE 0.0D0.
C
C
      DATA ZERO/0.0D0/
C
C
C***FIRST EXECUTABLE STATEMENT  DODPC3
C
C
C  PRINT STOPPING CONDITIONS
C
      WRITE (LUNRPT,1000) INFO
      IF (INFO.LT.0) THEN
         WRITE (LUNRPT,1110)
      ELSE
         INFO1 = MOD(INFO,1000)/100
         INFO2 = MOD(INFO,100)/10
         INFO3 = MOD(INFO,10)
C
         IF (INFO3.EQ.1) THEN
            WRITE (LUNRPT,1120)
         ELSE IF (INFO3.EQ.2) THEN
            WRITE (LUNRPT,1130)
         ELSE IF (INFO3.EQ.3) THEN
            WRITE (LUNRPT,1140)
         ELSE IF (INFO3.EQ.4) THEN
            WRITE (LUNRPT,1150)
         ELSE
            WRITE (LUNRPT,1160)
         END IF
C
C  PRINT WARNING DIAGNOSTICS
C
         IF (INFO1.NE.0 .OR. INFO2.NE.0) THEN
            WRITE (LUNRPT,1210)
            IF (INFO1.NE.0) THEN
               IF (INFO2.NE.0) THEN
                  WRITE (LUNRPT,1220) ', AND'
               ELSE
                  WRITE (LUNRPT,1220) '.    '
               END IF
            END IF
            IF (INFO2.NE.0) THEN
               WRITE (LUNRPT,1230)
            END IF
         END IF
      END IF
C
C  PRINT MISC. STOPPING INFO
C
      WRITE (LUNRPT,1300) NJEV,NFEV,RCOND,IRANK
C
C  PRINT FINAL SUM OF SQUARES
C
      WRITE (LUNRPT,2000)
      WRITE (LUNRPT,2100) RNORM**2
      IF (ISODR) THEN
         WRITE (LUNRPT,2200) DNRM2(N*M,DELWTD,1)**2
         WRITE (LUNRPT,2300) DNRM2(N,FWTD,1)**2
      END IF
C
      NPLM1 = 3
C
C  PRINT ESTIMATED BETA'S
C
      WRITE (LUNRPT,3000)
      IF (NP.EQ.1) THEN
         WRITE (LUNRPT,7100)
      ELSE
         WRITE (LUNRPT,7200)
      END IF
      DO 10 J=1,NP,NPLM1+1
         K = MIN(J+NPLM1,NP)
         IF (K.EQ.J) THEN
            WRITE (LUNRPT,8100) J,BETA(J)
         ELSE
            WRITE (LUNRPT,8200) J,K,(BETA(L),L=J,K)
         END IF
   10 CONTINUE
C
C  PRINT ESTIMATED EPSILON'S AND DELTA'S
C
      MAXLST = 32
      IF (IPR.GE.2 .OR. N.LT.MAXLST) THEN
         LAST = N
      ELSE
         LAST = MAXLST
      END IF
C
C  PRINT EPSILON'S AND DELTA'S TOGETHER IN A COLUMN IF THE NUMBER OF
C  COLUMNS OF DATA IN DELTA IS LESS THAN OR EQUAL TO THREE.
C
      IF (ISODR .AND. M.LE.3) THEN
         WRITE (LUNRPT,4100)
         WRITE (FMT1,9100) M
         WRITE (LUNRPT,FMT1) (J,J=1,M)
         DO 20 I=1,LAST
            WRITE (LUNRPT,4110) I,F(I),(DELTA(I,J),J=1,M)
   20    CONTINUE
         IF (N.GT.LAST) THEN
            IF (N.LE.LAST+4) THEN
               DO 30 I=LAST+1,N
                  WRITE (LUNRPT,4110) I,F(I),(DELTA(I,J),J=1,M)
   30          CONTINUE
            ELSE
               WRITE (FMT1,9200) M+1
               WRITE (LUNRPT,FMT1)
               WRITE (LUNRPT,FMT1)
               WRITE (LUNRPT,FMT1)
               WRITE (LUNRPT,4110) N,F(N),(DELTA(N,J),J=1,M)
            END IF
         END IF
      ELSE
C
C  PRINT EPSILON'S AND DELTA'S SEPARATELY
C
C  PRINT EPSILON'S
C
         WRITE (LUNRPT,4200)
         IF (LAST.EQ.1) THEN
            WRITE (LUNRPT,7100)
         ELSE
            WRITE (LUNRPT,7200)
         END IF
         DO 40 I=1,LAST,NPLM1+1
            K = MIN(I+NPLM1,LAST)
            IF (I.EQ.K) THEN
               WRITE (LUNRPT,8100) I,F(I)
            ELSE
               WRITE (LUNRPT,8200) I,K,(F(L),L=I,K)
            END IF
   40    CONTINUE
         IF (N.GT.LAST) THEN
            IF (N.EQ.LAST+1) THEN
               WRITE (LUNRPT,8100) N,F(N)
            ELSE IF (N.GT.LAST+1) THEN
               WRITE (LUNRPT,8300) N,F(N)
            END IF
         END IF
C
C  PRINT DELTA'S
C
         IF (ISODR) THEN
            DO 60 J=1,M
               WRITE (LUNRPT,4300) J
               IF (LAST.EQ.1) THEN
                  WRITE (LUNRPT,7100)
               ELSE
                  WRITE (LUNRPT,7200)
               END IF
               DO 50 I=1,LAST,NPLM1+1
                  K = MIN(I+NPLM1,LAST)
                  IF (I.EQ.K) THEN
                     WRITE (LUNRPT,8100) I,DELTA(I,J)
                  ELSE
                     WRITE (LUNRPT,8200) I,K,(DELTA(L,J),L=I,K)
                  END IF
   50          CONTINUE
               IF (N.EQ.LAST+1) THEN
                  WRITE (LUNRPT,8100) N,DELTA(N,J)
               ELSE IF (N.GT.LAST+1) THEN
                  WRITE (LUNRPT,8300) N,DELTA(N,J)
               END IF
   60       CONTINUE
         END IF
      END IF
C
      RETURN
C
C  FORMAT STATEMENTS
C
 1000 FORMAT
     +   (///' STOPPING CONDITION (INFO = ',I6,'):'/
     +       ' -----------------------------------'/)
 1110 FORMAT
     +   (   ' THE USER HAS STOPPED THE COMPUTATIONS'/
     +       ' IN USER-SUPPLIED SUBROUTINE FUN OR JAC')
 1120 FORMAT
     +   (   ' THE RELATIVE CHANGE IN THE SUM OF THE SQUARED'/
     +       ' WEIGHTED OBSERVATIONAL ERRORS IS LESS THAN SSTOL')
 1130 FORMAT
     +   (   ' THE RELATIVE CHANGE IN THE NORM OF BETA AND DELTA'/
     +       ' IS LESS THAN PARTOL')
 1140 FORMAT
     +   (   ' THE RELATIVE CHANGE IN THE SUM OF THE SQUARED'/
     +       ' WEIGHTED OBSERVATIONAL ERRORS IS LESS THAN SSTOL'/
     +       ' AND'/
     +       ' THE RELATIVE CHANGE IN THE NORM OF BETA AND DELTA'/
     +       ' IS LESS THAN PARTOL')
 1150 FORMAT
     +   (   ' MAXIMUM NUMBER OF ITERATIONS REACHED')
 1160 FORMAT
     +   (   ' ERROR.  PLEASE CHECK WITH AUTHORS.')
 1210 FORMAT
     +   (/  ' NOTE:'//
     +       ' THE RESULTS FROM ODRPACK ARE QUESTIONABLE BECAUSE'/)
 1220 FORMAT
     +   (   ' THE ODRPACK JACOBIAN MATRIX CHECKING PROCEDURE HAS  '/
     +       ' DETERMINED THAT THE CORRECTNESS OF THE USER-SUPPLIED'/
     +       ' JACOBIAN MATRICES IS QUESTIONABLE',A5/)
 1230 FORMAT
     +   (   ' THE RESULTS OF THE MODEL FUNCTION AND/OR ITS        '/
     +       ' DERIVATIVES ARE UNAFFECTED BY CHANGES IN THE UNFIXED'/
     +       ' FUNCTION PARAMETERS (BETA), INDICATING A PROBABLE   '/
     +       ' ERROR IN USER-SUPPLIED SUBROUTINES FUN AND/OR JAC.  ')
 1300 FORMAT
     +  (/'                             CONDITION            '/
     +    '       NUMBER OF  NUMBER OF     NUMBER        RANK'/
     +    '      ITERATIONS   FN EVALS  (INVERSE)  DEFICIENCY'/
     +    6X,I10,I11,D11.4,6X,I6)
 2000 FORMAT
     +   (///' FINAL SUMS OF SQUARES:'/
     +       ' ----------------------'/)
 2100 FORMAT
     +   (   ' SUM OF SQUARED WEIGHTED OBSERVATIONAL ERRORS ', D17.8)
 2200 FORMAT
     +   (   ' SUM OF SQUARED WEIGHTED DELTAS               ', D17.8)
 2300 FORMAT
     +   (   ' SUM OF SQUARED WEIGHTED EPSILONS             ', D17.8)
 3000 FORMAT
     +   (///' ESTIMATED BETA(I), I = 1, ..., NP:'/
     +       ' ----------------------------------')
 4100 FORMAT
     +   (///' ESTIMATED EPSILON(I) AND DELTA(I,*), I = 1, ..., N:'/
     +       ' ---------------------------------------------------')
 4110 FORMAT(1X,I5,5D16.8)
 4200 FORMAT
     +   (///' ESTIMATED EPSILON(I), I = 1, ..., N:'/
     +      ' ------------------------------------')
 4300 FORMAT
     +   (///' ESTIMATED DELTA(I,',I3,'), I = 1, ..., N:'/
     +      ' --------------------------------------')
 7100 FORMAT
     +   (/'         INDEX            VALUE')
 7200 FORMAT
     +   (/'         INDEX            VALUE -------------->')
 8100 FORMAT
     +   (9X,I5,1X,D16.8)
 8200 FORMAT
     +   (1X,I5,' TO',I5,1X,7D16.8)
 8300 FORMAT
     +   (1X,'  ... TO',I5,1X,'      ...       ',D16.8)
 9100 FORMAT
     +   ('(/''     I      EPSILON(I)'',',I1,
     +    '(''      DELTA(I,'',I1,'')''))')
 9200 FORMAT('(5X,''.'',',I1,'(3X,''.'',12X))')
      END
