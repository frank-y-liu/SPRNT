C
C   DRIVER FOR TESTING CMLIB ROUTINES
C      DOUBLE PRECISION FULLERTON ROUTINES
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
      IPASS=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
C              ***END NOTE***
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XERMAX(1000)
      CALL XSETF(0)
C   TEST DOUBLE PRECISION FULLERTON ROUTINES
      CALL DFNCK(LUN,KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR FNLIB(DOUBLE),
     1 HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- FNLIB (DOUBLE) PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      SUBROUTINE DFNCK(ID,KPRINT,IPASS)
C***
C***
C***  WRITTEN BY J. CHOW, C3, LASL, AUG. 1980
C***
C***  THIS PROGRAM DOES A QUICK CHECK FOR NEARLY ALL THE
C***  DOUBLE PRECISION ROUTINES IN THE FULLERTON SPECIAL
C***  FUNCTION LIBRARY.
C***
C***
C***  PARAMETER LIST-
C***
C***  ID -- INPUT INTEGER VALUE VARIABLE TO DESIGNATE THE
C***        EXTERNAL DEVICE UNIT FOR MESSAGE OUTPUT
C***
C***
      INTEGER I,ID,KPRINT,IPASS
      DOUBLE PRECISION D2MACH
      DOUBLE PRECISION Y(87),V(87),ERRMAX,ERRTOL,ABSERR,RELERR
      DOUBLE PRECISION DCBRT,DEXPRL,DLNREL,DASINH,DACOSH
      DOUBLE PRECISION DATANH,DE1,DFAC,DBINOM,DGAMMA,DGAMR
      DOUBLE PRECISION DGAMI,DGAMIC,DGAMIT,DPSI,DPOCH,DPOCH1
      DOUBLE PRECISION DBETA,DBETAI,DERF,DDAWS,DBESJ0,DBESJ1
      DOUBLE PRECISION DBESY0,DBESY1,DBESI0,DBESI1,DBESK0
      DOUBLE PRECISION DBESK1,DBSI0E,DBSI1E,DBSK0E,DBSK1E
      DOUBLE PRECISION DAI,DBI,DAIE,DBIE,DCHU
C
      EXTERNAL DGAMMA, DERF
C
CORRECT VALUES THROUGH DIFFERENT CALCULATIONS ARE STORED IN V(.)
C
      DATA V( 1)/-.2000000000 0000000000 0000000000 D+01/
      DATA V( 2)/ .9983407900 0000000000 0000000000 D+02/
      DATA V( 3)/ .1001251042 3180339898 4880296644 D+01/
      DATA V( 4)/ .9950166250 8319464260 9402280122 D+00/
      DATA V( 5)/ .1371498381 4723363824 3285631505 D+00/
      DATA V( 6)/-.1000000500 0003333335 8333416027 D-05/
      DATA V( 7)/ .9983407900 0000000000 0000000000 D-01/
      DATA V( 8)/-.1194763217 0000000000 0000000000 D+01/
      DATA V( 9)/ .1111122222 3333344444 0000000000 D+00/
      DATA V(10)/ .3141592653 5900000000 0000000000 D+01/
      DATA V(11)/-.1111122222 3333344444 0000000000 D+00/
      DATA V(12)/ .2646652412 0000000000 0000000000 D+01/
      DATA V(13)/ .5597735947 7616081174 6795939295 D+00/
      DATA V(14)/ .1000195824 0663265190 1909339800 D+00/
      DATA V(15)/ .1307674368 0000000000 0000000000 D+13/
      DATA V(16)/ .8222838654 1779228177 2556288000 D+34/
      DATA V(17)/ .8344518000 0000000000 0000000000 D+09/
      DATA V(18)/ .2250829575 1200000000 0000000000 D+13/
      DATA V(19)/ .8862269254 5275801364 9083741687 D+00/
      DATA V(20)/-.3141592653 5897932384 6264338328 D+01/
      DATA V(21)/ .3183098861 8379067153 7767526733 D+00/
      DATA V(22)/ .8823957200 2038009055 0940262394 D-06/
      DATA V(23)/ .9998566182 6372370688 5830759463 D+00/
      DATA V(24)/ .8882907071 8395673587 8281870759 D+00/
      DATA V(25)/ .1353352832 3661269189 3999494971 D+00/
      DATA V(26)/ .3469303062 9580145617 0933128256 D-03/
      DATA V(27)/ .7869386805 7473315279 2400930048 D+00/
      DATA V(28)/ .6316733917 7525812329 1222663623 D-01/
      DATA V(29)/ .4227843350 9846713939 3487909918 D+00/
      DATA V(30)/ .2303001034 2976863752 7259355045 D+01/
      DATA V(31)/-.2820947917 7387814347 4039725759 D+00/
      DATA V(32)/ .1875000000 0000000000 0000000000 D+01/
      DATA V(33)/ .5135166683 8205029558 4635612122 D-01/
      DATA V(34)/ .5987500000 0000000000 0000000000 D+02/
      DATA V(35)/ .1570796326 7948966192 3132169164 D+01/
      DATA V(36)/ .7550061690 3746404275 1871235437 D-03/
      DATA V(37)/ .3812815664 6177091614 9261183171 D+00/
      DATA V(38)/ .2656250000 0000000000 0000000000 D+00/
      DATA V(39)/ .5204998778 1304653768 2746653770 D+00/
      DATA V(40)/ .8883882317 0170776406 9578446749 D+00/
      DATA V(41)/ .4244363835 0202229593 4042352455 D+00/
      DATA V(42)/ .3370006597 4209342338 3019719632 D+00/
      DATA V(43)/-.1775967713 1433830434 7397013056 D+00/
      DATA V(44)/ .2238907791 4123566805 1827454628 D+00/
      DATA V(45)/-.3275791375 9146522203 7734321812 D+00/
      DATA V(46)/ .5767248077 5687338720 2448242187 D+00/
      DATA V(47)/ .5103756726 4974511959 6606592612 D+00/
      DATA V(48)/-.3085176252 4903378007 3648984210 D+00/
      DATA V(49)/ .1478631433 9122684480 1050675510 D+00/
      DATA V(50)/-.1070324315 4093754688 8370772230 D+00/
      DATA V(51)/ .2279585302 3360672674 3720444020 D+01/
      DATA V(52)/ .2723987182 3604446894 5442320700 D+02/
      DATA V(53)/ .1590636854 6373290633 8225442450 D+01/
      DATA V(54)/ .2433564214 2450527199 1430504400 D+02/
      DATA V(55)/ .1138938727 4953343565 2719574910 D+00/
      DATA V(56)/ .3691098334 0425942747 3526100740 D-02/
      DATA V(57)/ .1398658818 1652242728 4598806997 D+00/
      DATA V(58)/ .4044613445 4521642083 6502183700 D-02/
      DATA V(59)/ .3085083225 5367103953 3384319255 D+00/
      DATA V(60)/ .1835408126 0932835307 3650751820 D+00/
      DATA V(61)/ .1639722669 4454235692 6122903850 D+00/
      DATA V(62)/ .2152692892 4893765915 8505143243 D+00/
      DATA V(63)/ .8415682150 7077141791 9124867127 D+00/
      DATA V(64)/ .5478075643 1351898686 8201568700 D+00/
      DATA V(65)/ .6002738587 8831258293 6045656600 D+00/
      DATA V(66)/ .1033476847 0686885731 7535710603 D+01/
      DATA V(67)/ .8862269254 5275801364 9083741000 D+00/
      DATA V(68)/ .1329340388 1791370204 7362561200 D+01/
      DATA V(69)/ .2880237507 7214635443 5952215970 D+01/
      DATA V(70)/ .5604991216 3979286993 1128243359 D+00/
      DATA V(71)/ .6725989459 6775144391 7353892000 D+00/
      DATA V(72)/ .9640584892 2044373628 1540578570 D+00/
      DATA V(73)/ .2316936064 8083348976 9125254500 D+00/
      DATA V(74)/ .1572592338 0470489995 2660465400 D-01/
      DATA V(75)/ .8542770431 0315549330 0048798776 D+00/
      DATA V(76)/ .1878941503 7478950009 0933504950 D+01/
      DATA V(77)/ .2932771591 2994736245 0897433147 D+00/
      DATA V(78)/ .2193222051 2871206086 2850888400 D+00/
      DATA V(79)/ .6748924111 1563021286 5414309867 D+00/
      DATA V(80)/ .4647504801 9609251501 9775411670 D+00/
      DATA V(81)/ .2499999999 9999999999 9999999880 D+00/
      DATA V(82)/ .7350086093 0037774536 9706799000 D+00/
      DATA V(83)/ .4069617876 5067297974 2685260000 D+00/
      DATA V(84)/ .4482566692 9158295391 6931735480 D+00/
      DATA V(85)/ .5963473623 2319407434 1078499290 D+00/
      DATA V(86)/ .7573420861 2217595345 4414369190 D+00/
      DATA V(87)/ .7578721561 4131210604 3351240000 D+00/
C
COMPUTE FUNCTIONAL VALUES
C
      Y( 1)=DCBRT(-8.D0)
      Y( 2)=DCBRT(.9950306243 6570396447 5039000000 D6)
      Y( 3)=DEXPRL(.25D-2)
      Y( 4)=DEXPRL(-.1D-1)
      Y( 5)=DLNREL(.147D0)
      Y( 6)=DLNREL(-.1D-5)
      Y( 7)=DASINH(.1000000001 0129514521 1538706587 D0)
      Y( 8)=DASINH(-.1499999999 4824063412 4264852207 D1)
      Y( 9)=DACOSH(.1006179316 4909482374 7218929626 D1)
      Y(10)=DACOSH(.1159195327 5523908462 8557897777 D2)
      Y(11)=DATANH(-.1106572080 4138399806 6515207788 D0)
      Y(12)=DATANH(.9899999999 9279130066 3084082410 D0)
      Y(13)=DE1(.5D0)
      Y(14)=DE1(1.5D0)
      Y(15)=DFAC(15)
      Y(16)=DFAC(31)
      Y(17)=DBINOM(35,12)
      Y(18)=DBINOM(50,15)
      Y(19)=DGAMMA(1.5D0)
      Y(20)=DGAMMA(-.5D0)*DGAMMA(1.5D0)
      Y(21)=DGAMR(-1.5D0)*DGAMR(2.5D0)
      Y(22)=DGAMR(10.5D0)
      Y(23)=DGAMI(1.D0,8.85D0)
      Y(24)=DGAMI(2.D0,3.75D0)
      Y(25)=DGAMIC(1.D0,2.D0)
      Y(26)=DGAMIC(2.D0,10.4D0)
      Y(27)=DGAMIT(1.D0,.5D0)
      Y(28)=DGAMIT(2.D0,3.75D0)
      Y(29)=DPSI(2.D0)
      Y(30)=DPSI(10.5D0)
      Y(31)=DPOCH(-.5D0,1.5D0)
      Y(32)=DPOCH(.5D0,3.D0)
      Y(33)=DPOCH1(.5D0,2.5D0)
      Y(34)=DPOCH1(10.5D0,2.D0)
      Y(35)=DBETA(.5D0,1.5D0)
      Y(36)=DBETA(5.5D0,5.5D0)
      Y(37)=DBETAI(.5D0,2.D0,1.5D0)
      Y(38)=DBETAI(.25D0,1.5D0,2.D0)
      Y(39)=DERF(.5D0)
      Y(40)=DERF(1.125D0)
      Y(41)=DDAWS(.5D0)
      Y(42)=DDAWS(1.84D0)
      Y(43)=DBESJ0(5.D0)
      Y(44)=DBESJ0(2.D0)
      Y(45)=DBESJ1(5.D0)
      Y(46)=DBESJ1(2.D0)
      Y(47)=DBESY0(2.D0)
      Y(48)=DBESY0(5.D0)
      Y(49)=DBESY1(5.D0)
      Y(50)=DBESY1(2.D0)
      Y(51)=DBESI0(2.D0)
      Y(52)=DBESI0(5.D0)
      Y(53)=DBESI1(2.D0)
      Y(54)=DBESI1(5.D0)
      Y(55)=DBESK0(2.D0)
      Y(56)=DBESK0(5.D0)
      Y(57)=DBESK1(2.D0)
      Y(58)=DBESK1(5.D0)
      Y(59)=DBSI0E(2.D0)
      Y(60)=DBSI0E(5.D0)
      Y(61)=DBSI1E(5.D0)
      Y(62)=DBSI1E(2.D0)
      Y(63)=DBSK0E(2.D0)
      Y(64)=DBSK0E(5.D0)
      Y(65)=DBSK1E(5.D0)
      Y(66)=DBSK1E(2.D0)
      CALL DBSKES(.5D0,2.D0,3,Y(67))
      CALL DBSKES(.5D0,5.D0,3,Y(70))
      Y(73)=DAI(.5D0)
      Y(74)=DAI(2.5D0)
      Y(75)=DBI(.5D0)
      Y(76)=DBI(1.5D0)
      Y(77)=DAIE(.5D0)
      Y(78)=DAIE(2.5D0)
      Y(79)=DBIE(.5D0)
      Y(80)=DBIE(2.5D0)
      Y(81)=DCHU(1.D0,2.D0,4.D0)
      Y(82)=DCHU(5.D0/6.D0,5.D0/3.D0,4.D0/3.D0)
      Y(83)=DCHU(.75D0,.75D0,2.5D0)
      Y(84)=DCHU(1.D0,1.D0,1.5D0)
      Y(85)=DCHU(1.D0,1.D0,1.D0)
      Y(86)=DCHU(1.D0,1.D0,-DLOG(.5D0))
      Y(87)=DCHU(.5D0,.5D0,1.D0)
C
CHECK FOR POSSIBLE ERRORS
C
      ERRMAX=D2MACH(4)
      ERRTOL=DSQRT(ERRMAX)
      DO 10 I=1,87
        ABSERR=DABS(V(I)-Y(I))
        RELERR=ABSERR/DABS(V(I))
        ERRMAX=DMAX1(RELERR,ERRMAX)
        IF (RELERR.GT.ERRTOL.AND.KPRINT.NE.0)
     1 WRITE (ID,620) I,RELERR,ABSERR
   10 CONTINUE
      IPASS=0
      IF (ERRMAX.LE.ERRTOL) IPASS=1
      IF(IPASS.NE.0.AND.KPRINT.GE.2)WRITE (ID,610)
  610 FORMAT('DOUBLE PRECISION SPECIAL FUNCTION ROUTINES O.K.')
  620 FORMAT('FOR  I =',I3,' TEST FAILS WITH  RELERR =',
     .       D38.30,' AND  ABSERR =',D38.30)
                                        RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
