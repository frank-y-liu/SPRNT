C
C   DRIVER FOR TESTING CMLIB ROUTINES
C      SNBFS   SNBIR   SPOFS   SPOIR
C      DNBFS           DPOFS
C      CNBFS   CNBIR   CPOFS   CPOIR
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      INTEGER NERR
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XERMAX(1000)
      TERR=0
      CALL XSETF(0)
      CALL SQCK(NERR,KPRINT,LUN)
      TERR=TERR+NERR
      CALL DQCK(NERR,KPRINT,LUN)
      TERR=TERR+NERR
      CALL CQCK(NERR,KPRINT,LUN)
      TERR=TERR+NERR
      IF(TERR.NE.0)ITEST=0
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR LINDRIVES HAS,
     1 FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- LINDRIVES PASSED ALL TESTS ----- ')
      END
      SUBROUTINE CQCK (NERR,KPRINT,LUN)
C
C    *****************************************************
C
C    QUICK CHECK SUBROUTINE CQCK TESTS THE EXECUTION OF THE
C    SLATEC SUBROUTINES  CPOFS, CPOIR, CNBFS AND CNBIR.
C    A TITLE LINE AND A SUMMARY LINE ARE ALWAYS OUTPUTTED.
C
C    THE SUMMARY LINE GIVES A COUNT OF THE NUMBER OF
C    PROBLEMS ENCOUNTERED IN THE TEST IF ANY EXIST.  CQCK
C    CHECKS COMPUTED VS. EXACT SOLUTIONS TO AGREE TO
C    WITHIN 0.8 TIMES THE WORD LENGTH OF THE COMPUTER
C    (1.6 IF DOUBLE PRECISION) FOR CASE 1.  CQCK ALSO
C    TESTS ERROR HANDLING BY THE SUBROUTINE (CALLS TO
C    XERROR AND XERRWV (CQCK SETS IFLAG/KONTRL TO 0))
C    USING A SINGULAR MATRIX FOR CASE 2.  EACH EXECUTION
C    PROBLEM DETECTED BY CQCK RESULTS IN AN ADDITIONAL
C    EXPLANATORY LINE OF OUTPUT.
C
C    CQCK REQUIRES NO INPUT ARGUMENTS.
C    ON RETURN, NERR (INTEGER TYPE) CONTAINS THE TOTAL COUNT
C    OF ALL PROBLEMS DETECTED BY CQCK.
C
C    SLATEC ROUTINES CALLED-
C             CPOFS, CPOIR,
C            CNBFS, CNBIR, CNBCO, CNBFA, CNBSL,
C            XERROR, XERRWV, R2MACH
C    LINPACK ROUTINES CALLED-
C            CGECO, CGEFA, CGESL,
C            CPOCO, CPOFA, CPOSL
C    BLAS ROUTINES ARE CALLED.
C
C                   -- E. A. VOORHEES, GROUP C-3
C                      LOS ALAMOS SCIENTIFIC LABORATORY
C                      LOS ALAMOS, NM  87545
C    OCTOBER 2, 1980
C
C    *****************************************************
C
      REAL R,DELX,DELMAX,R2MACH
      COMPLEX A(4,4),AT(5,4),ABE(5,7),ABET(5,7),B(4),BT(4),C(4),WORK(35)
      INTEGER LDA,N,ML,MU,IND,IWORK(4),NERR,I,J,J1,J2,JD,MLP,K,KCASE,
     1 KPROG,LIST(4)
      DATA A/(2.E0,0.E0),(0.E0,1.E0),(0.E0,0.E0),(0.E0,0.E0),
     1  (0.E0,-1.E0),(2.E0,0.E0),(0.E0,0.E0),(0.E0,0.E0),
     2  (0.E0,0.E0),(0.E0,0.E0),(3.E0,0.E0),(0.E0,1.E0),
     3  (0.E0,0.E0),(0.E0,0.E0),(0.E0,-1.E0),(4.E0,0.E0)/
      DATA C/(1.E0,1.E0),(0.E0,1.E0),(0.E0,-1.E0),(1.E0,0.E0)/
      DATA B/(3.E0,2.E0),(-1.E0,3.E0),(0.E0,-4.E0),(5.E0,0.E0)/
      DATA LIST/4HPOFS,4HPOIR,4HNBFS,4HNBIR/
      LDA=5
      N=4
      ML=2
      MU=1
C
      IF(KPRINT.EQ.3)WRITE(LUN,800)
  800 FORMAT(/,'*    CQCK - QUICK CHECK FOR ',/,19X,
     1 'CPOFS, CPOIR, CNBFS AND CNBIR',/)
      NERR=0
      R=R2MACH(4)**0.8E0
C
C     FORM ABE(NB ARRAY) FROM MATRIX A.
      JD=2*ML+MU+1
      DO 30 J=1,JD
        DO 20 I=1,N
          ABE(I,J)=(0.0E0,0.0E0)
   20   CONTINUE
   30 CONTINUE
      MLP=ML+1
      DO 50 I=1,N
        J1=MAX0(1,I-ML)
        J2=MIN0(N,I+MU)
        DO 40 J=J1,J2
          K=J-I+MLP
          ABE(I,K)=A(I,J)
   40   CONTINUE
   50 CONTINUE
C
C     CASE 1 FOR WELL-CONDITIONED MATRIX, CASE 2 FOR SINGULAR MATRIX
      DO 170 KCASE=1,2
        DO 140 KPROG=1,4
C         FORM BT FROM B, AT FROM A, AND ABET FROM ABE
          DO 60 I=1,N
            BT(I)=B(I)
            DO 58 J=1,N
              AT(I,J)=A(I,J)
   58       CONTINUE
   60     CONTINUE
          DO 80 J=1,JD
            DO 70 I=1,N
              ABET(I,J)=ABE(I,J)
   70       CONTINUE
   80     CONTINUE
          IF(KCASE.NE.2) GO TO 100
C
C         MAKE AT AND ABET SINGULAR FOR CASE = 2
          DO 88 J=1,N
            AT(1,J)=(0.0E0,0.0E0)
   88     CONTINUE
          DO 90 J=1,JD
            ABET(1,J)=(0.0E0,0.0E0)
   90     CONTINUE
  100     CONTINUE
C
C         SOLVE FOR X
          IF(KPROG.EQ.1)CALL CPOFS(AT,LDA,N,BT,1,IND,WORK)
          IF(KPROG.EQ.2)CALL CPOIR(AT,LDA,N,BT,1,IND,WORK)
          IF(KPROG.EQ.3)CALL CNBFS(ABET,LDA,N,ML,MU,BT,1,IND,WORK,IWORK)
          IF(KPROG.EQ.4)CALL CNBIR(ABET,LDA,N,ML,MU,BT,1,IND,WORK,IWORK)
          IF(KCASE.GT.1) GO TO 130
C
C         COMPARE EXACT AND COMPUTED SOLUTIONS FOR CASE 1
          DELMAX=0.0E0
          DO 110 I=1,N
            DELX=ABS(REAL(BT(I))-REAL(C(I)))
            DELMAX=AMAX1(DELMAX,DELX)
            DELX=ABS(AIMAG(BT(I))-AIMAG(C(I)))
            DELMAX=AMAX1(DELMAX,DELX)
  110     CONTINUE
          IF(R.GT.DELMAX)GO TO 120
          NERR=NERR+1
          WRITE(LUN,801) LIST(KPROG),KCASE,DELMAX
  801     FORMAT(3X,'PROBLEM WITH C',A4,', CASE ',I1,'.',3X,
     1     'MAX ABS ERROR OF',E11.4,/)
  120     CONTINUE
          GO TO 150
C
C         CHECK CONTROL FOR SINGULAR MATRIX FOR CASE 2
  130     CONTINUE
          IF(IND.EQ.-4) GO TO 140
          NERR=NERR+1
          WRITE(LUN,802) LIST(KPROG),KCASE,IND
  802     FORMAT(3X,'PROBLEM WITH C',A4,', CASE ',I1,'.',3X,'HIND=',
     1      I2,' INSTEAD OF -4',/)
  140     CONTINUE
  150     CONTINUE
  160   CONTINUE
  170 CONTINUE
C
C     SUMMARY PRINT
      IF(NERR.NE.0) WRITE(LUN,803) NERR
      IF(KPRINT.GE.2.AND.NERR.EQ.0) WRITE(LUN,804)
  803 FORMAT(/,'**** CQCK DETECTED A TOTAL OF ',I2,
     1  'PROBLEMS. **** '/)
  804 FORMAT(5X,'CQCK DETECTED NO PROBLEMS.',/)
      RETURN
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      SUBROUTINE DQCK (NERR,KPRINT,LUN)
C
C    *****************************************************
C
C    QUICK CHECK SUBROUTINE DQCK TESTS THE EXECUTION OF THE
C    SLATEC SUBROUTINES  DPOFS AND DNBFS.  A TITLE LINE
C    AND A SUMMARY LINE ARE ALWAYS OUTPUTTED.
C
C    THE SUMMARY LINE GIVES A COUNT OF THE NUMBER OF
C    PROBLEMS ENCOUNTERED IN THE TEST IF ANY EXIST.  DQCK
C    CHECKS COMPUTED VS. EXACT SOLUTIONS TO AGREE TO
C    WITHIN 0.8 TIMES THE WORD LENGTH OF THE COMPUTER
C    (1.6 IF DOUBLE PRECISION) FOR CASE 1.  DQCK ALSO
C    TESTS ERROR HANDLING BY THE SUBROUTINE (CALLS TO
C    XERROR AND XERRWV (DQCK SETS IFLAG/KONTRL TO 0))
C    USING A SINGULAR MATRIX FOR CASE 2.  EACH EXECUTION
C    PROBLEM DETECTED BY DQCK RESULTS IN AN ADDITIONAL
C    EXPLANATORY LINE OF OUTPUT.
C
C    DQCK REQUIRES NO INPUT ARGUMENTS.
C    ON RETURN, NERR (INTEGER TYPE) CONTAINS THE TOTAL COUNT
C    OF ALL PROBLEMS DETECTED BY DQCK.
C
C    SLATEC ROUTINES CALLED-
C            DPOFS, DNBFS, DNBCO, DNBFA, DNBSL
C            XERROR, XERRWV, D2MACH
C    LINPACK ROUTINES CALLED-
C            DGECO, DGEFA, DGESL
C            DPOCO, DPOFA, DPOSL
C    BLAS ROUTINES ARE CALLED.
C
C                   -- E. A. VOORHEES, GROUP C-3
C                      LOS ALAMOS SCIENTIFIC LABORATORY
C                      LOS ALAMOS, NM  87545
C    OCTOBER 2, 1980
C
C    *****************************************************
C
      DOUBLE PRECISION A(4,4),AT(5,4),ABE(5,7),ABET(5,7),B(4),BT(4),
     1 C(4),WORK(35),SIGN,D2MACH
      REAL R,DELX,DELMAX
      INTEGER LDA,N,ML,MU,IND,IWORK(4),NERR,I,J,J1,J2,JD,MLP,K,KCASE,
     1 KPROG,LIST(2)
      DATA A/5.0D0,4.0D0,1.0D0,1.0D0,4.0D0,5.0D0,1.0D0,1.0D0,
     1 1.0D0,1.0D0,4.0D0,2.0D0,1.0D0,1.0D0,2.0D0,4.0D0/
      DATA LIST/4HPOFS,4HNBFS/
      LDA=5
      N=4
      ML=2
      MU=1
C
      IF(KPRINT.EQ.3)WRITE(LUN,800)
  800 FORMAT(/,'*    DQCK - QUICK CHECK FOR  DPOFS AND DNBFS',/)
      NERR=0
      R=D2MACH(4)**0.8E0
C
C     COMPUTE C VECTOR.
      SIGN=1.0D0
      DO 10 I=1,N
        C(I)=FLOAT(I)
        C(I)=SIGN/C(I)
        SIGN=-SIGN
   10 CONTINUE
      JD=2*ML+MU+1
C
C     CASE 1 FOR WELL-CONDITIONED MATRIX, CASE 2 FOR SINGULAR MATRIX.
      DO 170 KCASE=1,2
        DO 160 KPROG=1,2
C         SET VECTOR B TO ZERO.
          DO 11 I=1,N
            B(I)=0.0D0
   11     CONTINUE
          IF(KPROG.GE.2) GO TO 15
C
C         FORM VECTOR B FOR NON-BANDED.
          DO 13 I=1,N
            DO 12 J=1,N
              B(I)=B(I)+A(I,J)*C(J)
   12       CONTINUE
   13     CONTINUE
          GO TO 55
C
C         FORM ABE(NB ARRAY) FROM MATRIX AND FORM VECTOR B FOR BANDED.
   15     CONTINUE
          DO 30 J=1,JD
            DO 20 I=1,N
              ABE(I,J)=0.0D0
   20       CONTINUE
   30     CONTINUE
          MLP=ML+1
          DO 50 I=1,N
            J1=MAX0(1,I-ML)
            J2=MIN0(N,I+MU)
            DO 40 J=J1,J2
              K=J-I+MLP
              ABE(I,K)=A(I,J)
              B(I)=B(I)+(A(I,J)*C(J))
   40       CONTINUE
   50     CONTINUE
   55     CONTINUE
C         FORM BT FROM B, AT FROM A, AND ABET FROM ABE.
          DO 60 I=1,N
            BT(I)=B(I)
            DO 58 J=1,N
              AT(I,J)=A(I,J)
   58       CONTINUE
   60     CONTINUE
          DO 80 J=1,JD
            DO 70 I=1,N
              ABET(I,J)=ABE(I,J)
   70       CONTINUE
   80     CONTINUE
          IF(KCASE.NE.2) GO TO 100
C
C         MAKE AT AND ABET SINGULAR FOR CASE = 2
          DO 88 J=1,N
            AT(1,J)=0.0D0
   88     CONTINUE
          DO 90 J=1,JD
            ABET(1,J)=0.0D0
   90     CONTINUE
  100     CONTINUE
C
C         SOLVE FOR X
          IF(KPROG.EQ.1)CALL DPOFS(AT,LDA,N,BT,1,IND,WORK)
          IF(KPROG.EQ.2)CALL DNBFS(ABET,LDA,N,ML,MU,BT,1,IND,WORK,IWORK)
          IF(KCASE.GT.1) GO TO 130
C
C         COMPARE EXACT AND COMPUTED SOLUTIONS FOR CASE 1
          DELMAX=0.0E0
          DO 110 I=1,N
            DELX=DABS(BT(I)-C(I))
            DELMAX=AMAX1(DELMAX,DELX)
  110     CONTINUE
          IF(R.GT.DELMAX)GO TO 120
          NERR=NERR+1
          WRITE(LUN,801) LIST(KPROG),KCASE,DELMAX
  801     FORMAT(3X,'PROBLEM WITH D',A4,', CASE ',I1,'.',3X,
     1     'MAX ABS ERROR OF',E11.4,/)
  120     CONTINUE
          GO TO 150
C
C         CHECK CONTROL FOR SINGULAR MATRIX FOR CASE 2
  130     CONTINUE
          IF(IND.EQ.-4) GO TO 140
          NERR=NERR+1
          WRITE(LUN,802) LIST(KPROG),KCASE,IND
  802     FORMAT(3X,'PROBLEM WITH D',A4,', CASE ',I1,'.',3X,'HIND=',
     1      I2,' INSTEAD OF -4',/)
  140     CONTINUE
  150     CONTINUE
  160   CONTINUE
  170 CONTINUE
C
C     SUMMARY PRINT
      IF(NERR.NE.0) WRITE(LUN,803) NERR
      IF(KPRINT.GT.2.AND.NERR.EQ.0) WRITE(LUN,804)
  803 FORMAT(/,'**** DQCK DETECTED A TOTAL OF ',I2,
     1  'PROBLEMS. ***** ',/)
  804 FORMAT(5X,'DQCK DETECTED NO PROBLEMS.',/)
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE SQCK(NERR,KPRINT,LUN)
C
C    *****************************************************
C
C    QUICK CHECK SUBROUTINE SQCK TESTS THE EXECUTION OF THE
C    SLATEC SUBROUTINES  SPOFS, SPOIR, SNBFS AND SNBIR.
C    A TITLE LINE AND A SUMMARY LINE ARE ALWAYS OUTPUTTED.
C
C    THE SUMMARY LINE GIVES A COUNT OF THE NUMBER OF
C    PROBLEMS ENCOUNTERED IN THE TEST IF ANY EXIST.  SQCK
C    CHECKS COMPUTED VS. EXACT SOLUTIONS TO AGREE TO
C    WITHIN 0.8 TIMES THE WORD LENGTH OF THE COMPUTER
C    (1.6 IF DOUBLE PRECISION) FOR CASE 1.  SQCK ALSO
C    TESTS ERROR HANDLING BY THE SUBROUTINE (CALLS TO
C    XERROR AND XERRWV (SQCK SETS IFLAG/KONTRL TO 0))
C    USING A SINGULAR MATRIX FOR CASE 2.  EACH EXECUTION
C    PROBLEM DETECTED BY SQCK RESULTS IN AN ADDITIONAL
C    EXPLANATORY LINE OF OUTPUT.
C
C    SQCK REQUIRES NO INPUT ARGUMENTS.
C    ON RETURN, NERR (INTEGER TYPE) CONTAINS THE TOTAL COUNT
C    OF ALL PROBLEMS DETECTED BY SQCK.
C
C    SLATEC ROUTINES CALLED-
C            SPOFS, SPOIR,
C            SNBFS, SNBIR, SNBCO, SNBFA, SNBSL
C            XERROR, XERRWV, R2MACH
C    LINPACK ROUTINES CALLED-
C            SGECO, SGEFA, SGESL,
C            SPOCO, SPOFA, SPOSL
C    BLAS ROUTINES ARE CALLED.
C
C                   -- E. A. VOORHEES, GROUP C-3
C                      LOS ALAMOS SCIENTIFIC LABORATORY
C                      LOS ALAMOS, NM  87545
C    SEPTEMBER 30, 1980
C
C    *****************************************************
C
      REAL A(4,4),AT(5,4),ABE(5,7),ABET(5,7),B(4),BT(4),C(4),WORK(35),
     1 R,DELX,DELMAX,SIGN,R2MACH
      INTEGER LDA,N,ML,MU,IND,IWORK(4),NERR,I,J,J1,J2,JD,MLP,K,KCASE,
     1 KPROG,LIST(4)
      DATA A/5.0E0,4.0E0,1.0E0,1.0E0,4.0E0,5.0E0,1.0E0,1.0E0,
     1 1.0E0,1.0E0,4.0E0,2.0E0,1.0E0,1.0E0,2.0E0,4.0E0/
      DATA LIST/4HPOFS,4HPOIR,4HNBFS,4HNBIR/
      LDA=5
      N=4
      ML=2
      MU=1
C
      IF(KPRINT.EQ.3)WRITE(LUN,800)
  800 FORMAT(/,'*    SQCK - QUICK CHECK FOR ',/,19X,
     1 'SPOFS, SPOIR, SNBFS AND SNBIR',/)
      NERR=0
      R=R2MACH(4)**0.8E0
C
C     COMPUTE C VECTOR.
      SIGN=1.0E0
      DO 10 I=1,N
        C(I)=SIGN/FLOAT(I)
        SIGN=-SIGN
   10 CONTINUE
      JD=2*ML+MU+1
C
C     CASE 1 FOR WELL-CONDITIONED MATRIX, CASE 2 FOR SINGULAR MATRIX.
      DO 170 KCASE=1,2
        DO 140 KPROG=1,4
C         SET VECTOR B TO ZERO.
          DO 11 I=1,N
            B(I)=0.0E0
   11     CONTINUE
          IF(KPROG.GE.3) GO TO 15
C
C         FORM VECTOR B FOR NON-BANDED.
          DO 13 I=1,N
            DO 12 J=1,N
              B(I)=B(I)+A(I,J)*C(J)
   12       CONTINUE
   13     CONTINUE
          GO TO 55
C
C         FORM ABE(NB ARRAY) FROM MATRIX A AND FORM VECTOR B FOR BANDED.
   15     CONTINUE
          DO 30 J=1,JD
            DO 20 I=1,N
              ABE(I,J)=0.0E0
   20       CONTINUE
   30     CONTINUE
          MLP=ML+1
          DO 50 I=1,N
            J1=MAX0(1,I-ML)
            J2=MIN0(N,I+MU)
            DO 40 J=J1,J2
              K=J-I+MLP
              ABE(I,K)=A(I,J)
              B(I)=B(I)+(A(I,J)*C(J))
   40       CONTINUE
   50     CONTINUE
   55     CONTINUE
C           FORM BT FROM B, AT FROM A, AND ABET FROM ABE.
          DO 60 I=1,N
            BT(I)=B(I)
            DO 58 J=1,N
              AT(I,J)=A(I,J)
   58       CONTINUE
   60     CONTINUE
          DO 80 J=1,JD
            DO 70 I=1,N
              ABET(I,J)=ABE(I,J)
   70       CONTINUE
   80     CONTINUE
          IF(KCASE.NE.2) GO TO 100
C
C         MAKE AT AND ABET SINGULAR FOR CASE = 2
          DO 88 J=1,N
            AT(1,J)=0.0E0
   88     CONTINUE
          DO 90 J=1,JD
            ABET(1,J)=0.0E0
   90     CONTINUE
  100     CONTINUE
C
C         SOLVE FOR X
          IF(KPROG.EQ.1)CALL SPOFS(AT,LDA,N,BT,1,IND,WORK)
          IF(KPROG.EQ.2)CALL SPOIR(AT,LDA,N,BT,1,IND,WORK)
          IF(KPROG.EQ.3)CALL SNBFS(ABET,LDA,N,ML,MU,BT,1,IND,WORK,IWORK)
          IF(KPROG.EQ.4)CALL SNBIR(ABET,LDA,N,ML,MU,BT,1,IND,WORK,IWORK)
          IF(KCASE.GT.1) GO TO 130
C
C         COMPARE EXACT AND COMPUTED SOLUTIONS FOR CASE 1
          DELMAX=0.0E0
          DO 110 I=1,N
            DELX=ABS(BT(I)-C(I))
            DELMAX=AMAX1(DELMAX,DELX)
  110     CONTINUE
          IF(R.GT.DELMAX)GO TO 120
          NERR=NERR+1
          WRITE(LUN,801) LIST(KPROG),KCASE,DELMAX
  801     FORMAT(3X,'PROBLEM WITH S',A4,', CASE ',I1,'.',3X,
     1     'MAX ABS ERROR OF',E11.4,/)
  120     CONTINUE
          GO TO 150
C
C         CHECK CONTROL FOR SINGULAR MATRIX FOR CASE 2
  130     CONTINUE
          IF(IND.EQ.-4) GO TO 140
          NERR=NERR+1
          WRITE(LUN,802) LIST(KPROG),KCASE,IND
  802     FORMAT(3X,'PROBLEM WITH S',A4,', CASE ',I1,'.',3X,'IND=',
     1      I2,' INSTEAD OF -4',/)
  140     CONTINUE
  150     CONTINUE
  160   CONTINUE
  170 CONTINUE
C
C     SUMMARY PRINT
      IF(NERR.NE.0) WRITE(LUN,803) NERR
      IF(KPRINT.GE.2.AND.NERR.EQ.0) WRITE(LUN,804)
  803 FORMAT(/,'**** SQCK DETECTED A TOTAL OF ',I2,
     1  ' PROBLEMS. ****',/)
  804 FORMAT(5X,'SQCK DETECTED NO PROBLEMS.',/)
      RETURN
      END
