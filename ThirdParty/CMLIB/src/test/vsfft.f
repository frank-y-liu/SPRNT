C
C   DRIVER FOR TESTING CMLIB ROUTINES
C     VSFFT SUBLIBRARY
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XSETF(1)
      CALL XERMAX(1000)
C   TEST VSFFT
      CALL VSFFTQX(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR SUBLIBRARY VSFFT
     *HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- SUBLIBRARY VSFFT PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE VSFFTQX(KPRINT,IPASS)
      COMMON/UNIT/LUN
      IPASS=1
      TOL=R2MACH(4)*500.E0
      Z=UNI(7564)
      ERR=0.
      CALL TVSRFTF(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSRFTB(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSSINF(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSSINB(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSSINQ(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSCOSF(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSCOSB(ERR1,KPRINT)
      ERR=ERR+ERR1
      CALL TVSCOSQ(ERR1,KPRINT)
      ERR=(ERR+ERR1)/8
      IF(ERR.GT.TOL) IPASS=2
      IF(KPRINT.EQ.3.OR.(KPRINT.EQ.2.AND.IPASS.EQ.2))
     *          WRITE(LUN,2) ERR,TOL
    2 FORMAT (' AVERAGE MAXIMUM ERROR FOR TESTS OF ALL',/
     *        ' STAGGERED GRID SOLVERS ',  E15.5,/
     *        ' ALLOWABLE ERROR TOLERANCE ', E15.5)
      RETURN
      END
      SUBROUTINE TVSRFTB(ERR1,KPRINT)
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
C
C     TEST PROGRAM FOR VSRFTB
C
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      SIGN=-1.
      DO 230 J=1,N
      SIGN=-SIGN
      TEMP(J)=X(1)
      DO 220 K=2,N-1,2
  220 TEMP(J)  =TEMP(J)+2.*(X(K)*COS(K*(J-1)*PIBYN)-
     *                  X(K+1)*SIN(K*(J-1)*PIBYN))
       IF (2*(N/2) .EQ. N) TEMP(J)=TEMP(J)+SIGN*X(N)
  230 CONTINUE
      DO 210 I=1,N
  210 TEMP(I)=SQRT(1./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSRFTI(N,W)
      CALL VSRFTB(X,1,N,1,ANS,W)
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSRFTF(ERR1,KPRINT)
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
C
C     TEST PROGRAM FOR VSRFTF
C
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      TEMP(1)=0.
      TEMP(N)=0.
      SIGN=-1.
      DO 200 J=1,N
      SIGN=-SIGN
      TEMP(1)=TEMP(1)+X(J)
  200 TEMP(N)=TEMP(N)+SIGN*X(J)
      DO 220 J=2,N-1,2
      TEMP(J)=0.
      TEMP(J+1)=0.
      DO 220 K=1,N
      TEMP(J)  =TEMP(J)+X(K)*COS((K-1)*J*PIBYN)
  220 TEMP(J+1)=TEMP(J+1)-X(K)*SIN((K-1)*J*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(1./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSRFTI(N,W)
      CALL VSRFTF(X,1,N,1,ANS,W)
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSSINF(ERR1,KPRINT)
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
C
C     TEST PROGRAM FOR VSSINF
C
       ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      DO 200 I=1,N
      TEMP(I)=0.
      DO 200 J=1,N
  200 TEMP(I)=TEMP(I)+X(J)*SIN((J-.5)*I*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSSINI(N,W(1),W(N+1),W(2*N+1))
      CALL VSSINF(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSSINB(ERR1,KPRINT)
      COMMON/UNIT/LUN
C
C     TEST PROGRAM FOR VSSINB
C
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      SIGN=-1.
      NM1=N-1
      DO 200 I=1,N
      SIGN=-SIGN
      TEMP(I)=.5*SIGN*X(N)
      DO 200 J=1,NM1
  200 TEMP(I)=TEMP(I)+X(J)*SIN((I-.5)*J*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSSINI(N,W(1),W(N+1),W(2*N+1))
      CALL VSSINB(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSSINQ(ERR1,KPRINT)
C
C     TEST PROGRAM FOR VSSINQ
C
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      DO 200 I=1,N
      TEMP(I)=0.
      DO 200 J=1,N
  200 TEMP(I)=TEMP(I)+X(J)*SIN((I-.5)*(J-.5)*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSSNQI(N,W(1),W(N+1),W(2*N+1),W(3*N+1),W(4*N+1))
      CALL VSSINQ(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1),W(3*N+1),W(4*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSCOSF(ERR1,KPRINT)
C
C     TEST PROGRAM FOR VSCOSF
C
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      DO 200 I=1,N
      TEMP(I)=0.
      DO 200 J=1,N
  200 TEMP(I)=TEMP(I)+X(J)*COS((J-.5)*(I-1)*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSCOSI(N,W(1),W(N+1),W(2*N+1))
      CALL VSCOSF(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSCOSB(ERR1,KPRINT)
C
C     TEST PROGRAM FOR VSCOSB
C
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      DO 200 I=1,N
      TEMP(I)=.5*X(1)
      DO 200 J=2,N
  200 TEMP(I)=TEMP(I)+X(J)*COS((I-.5)*(J-1)*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSCOSI(N,W(1),W(N+1),W(2*N+1))
      CALL VSCOSB(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
      SUBROUTINE TVSCOSQ(ERR1,KPRINT)
C
C     TEST PROGRAM FOR VSCOSQ
C
      COMMON/UNIT/LUN
      DIMENSION X(21),TEMP(21),W(100),ANS(21)
      ERR1=0.
      DO 900 N=3,11
      PIBYN=4.*ATAN(1.)/N
      DO 100 I=1,N
      X(I)=UNI(0)
      ANS(I)=X(I)
  100 CONTINUE
C     COMPUTE TRANSFORM EXPLICITLY
      DO 200 I=1,N
      TEMP(I)=0.
      DO 200 J=1,N
  200 TEMP(I)=TEMP(I)+X(J)*COS((I-.5)*(J-.5)*PIBYN)
      DO 210 I=1,N
  210 TEMP(I)=SQRT(2./N)*TEMP(I)
C     COMPUTE TRANSFORM BY NEW ALG
      CALL VSCSQI(N,W(1),W(N+1),W(2*N+1),W(3*N+1),W(4*N+1))
      CALL VSCOSQ(X,1,N,1,ANS,W(1),W(N+1),W(2*N+1),W(3*N+1),W(4*N+1))
      ERR=0.
      DO 300 I=1,N
      XERR=ABS(TEMP(I)-X(I))
      IF (XERR.GT.ERR)ERR=XERR
  300 CONTINUE
      IF(KPRINT.EQ.3) WRITE (LUN,1) N,ERR,(TEMP(I),X(I),I=1,N)
    1 FORMAT (/,' N,ERR =', I5,E15.5 / (2E25.14))
      ERR1=AMAX1(ERR,ERR1)
  900 CONTINUE
      RETURN
      END
