C
C   DRIVER FOR TESTING CMLIB ROUTINES
C      COMPLEX FULLERTON ROUTINES
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XERMAX(1000)
      CALL XSETF(0)
C   TEST COMPLEX FULLERTON ROUTINES
      CALL CFNCK(LUN,KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR FNLIB(COMPLEX),
     1 HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- FNLIB (COMPLEX) PASSED ALL TESTS ----- ')
      END
      SUBROUTINE CFNCK(ID,KPRINT,IPASS)
C***
C***
C***  WRITTEN BY J. CHOW, C3, LASL, SEPT. 1980
C***
C***  THIS PROGRAM DOES A QUICK CHECK FOR NEARLY ALL THE
C***  COMPLEX ROUTINES IN THE FULLERTON SPECIAL FUNCTION
C***  LIBRARY.
C***
C***
C***  PARAMETER LIST-
C***
C***  ID -- INPUT INTEGER VALUE VARIABLE TO DESIGNATE THE
C***        EXTERNAL DEVICE UNIT FOR MESSAGE OUTPUT
C***
C***
      INTEGER I,ID,KPRINT,IPASS
      REAL SQRT2,SQRT3,PI,R2MACH
      REAL ERRMAX,ERRTOL,ABSERR,RELERR
      COMPLEX C(32),W(32),CI
      COMPLEX CCBRT,CEXPRL,CLOG10,CLNREL,CTAN,CCOT,CASIN,CACOS
      COMPLEX CSINH,CCOSH,CTANH,CASINH,CACOSH,CLNGAM,CPSI,CATAN
C
CONSTANTS TO BE USED
C
      DATA CI/(0.E0,1.E0)/
      DATA SQRT2/.1414213562 3730950488E1/
      DATA SQRT3/.1732050807 5688772935E1/
      DATA PI/3.1415926535 8979323846E0/
C
COMPLEX VALUES THROUGH DIFFERENT CALCULATIONS ARE STORED IN C(.)
C
      DATA C( 1)/( .121699028117870E 1, .326091563038355E 0)/
      DATA C( 2)/( .866025403784438E 0, .500000000000000E 0)/
      DATA C( 3)/( .000000000000000E 0, .636619772367581E 0)/
      DATA C( 4)/( .137802461354738E 1, .909330673631480E 0)/
      DATA C( 5)/( .150514997831990E 0,-.341094088460459E 0)/
      DATA C( 6)/( .301029995663980E 0, .227396058973639E 0)/
      DATA C( 7)/( .303123109082158E-1,-.244978663126864E 0)/
      DATA C( 8)/( .693147180559947E 0, .523598775598298E 0)/
      DATA C( 9)/(-.813630257280238E-1, .103336966511721E 1)/
      DATA C(10)/( .546302489843789E 0, .000000000000000E 0)/
      DATA C(11)/( .183048772171245E 1, .000000000000000E 0)/
      DATA C(12)/(-.757236713834364E-1,-.961745759068982E 0)/
      DATA C(13)/( .970930856437313E 0,-.113287925945897E 1)/
      DATA C(14)/( .104999388884240E 1, .196048071389998E 1)/
      DATA C(15)/( .520802437952465E 0,-.196048071390002E 1)/
      DATA C(16)/( .599865470357589E 0, .113287925945897E 1)/
      DATA C(17)/( .397515306849130E 0, .104467701612914E 1)/
      DATA C(18)/(-.117520119364380E 1, .000000000000000E 0)/
      DATA C(19)/( .000000000000000E 0,-.117520119364380E 1)/
      DATA C(20)/(-.642148124715515E 0,-.106860742138277E 1)/
      DATA C(21)/(-.116673625724091E 1,-.243458201185722E 0)/
      DATA C(22)/( .761594155955766E 0, .000000000000000E 0)/
      DATA C(23)/(-.100000000000000E 1, .000000000000000E 0)/
      DATA C(24)/( .181878614736412E 1, .586225017697977E 0)/
      DATA C(25)/(-.152857091948100E 1, .114371774040242E 1)/
      DATA C(26)/( .144363547517882E 1, .157079632679490E 1)/
      DATA C(27)/(-.340863758923258E 1, .142127515954291E 1)/
      DATA C(28)/(-.156059525546301E 1, .152533527872833E 1)/
      DATA C(29)/(-.196351002602143E 1, .000000000000000E 0)/
      DATA C(30)/( .161278484461574E 1, .147079632679497E 1)/
      DATA C(31)/( .313314753080534E-1, .541264220944095E-1)/
      DATA C(32)/(-.785398163397449E 0, .658478948462413E 0)/
C
COMPUTE FUNCTIONAL VALUES
C
      W( 1)=CCBRT(SQRT2*(1.E0+CI))
      W( 2)=CCBRT(CI)
      W( 3)=CEXPRL(PI*CI)
      W( 4)=CEXPRL(1.E0+CI)
      W( 5)=CLOG10(1.E0-CI)
      W( 6)=CLOG10(SQRT3+CI)
      W( 7)=CLNREL(-.25E0*CI)
      W( 8)=CLNREL(SQRT3-1.E0+CI)
      W( 9)=CTAN(-1.E0+.5E0*PI*CI)
      W(10)=CTAN(.5E0+0.E0*CI)
      W(11)=CCOT(.5E0+0.E0*CI)
      W(12)=CCOT(-1.E0+.5E0*PI*CI)
      W(13)=CASIN(SQRT2-.25E0*PI*CI)
      W(14)=CASIN(PI+SQRT3*CI)
      W(15)=CACOS(PI+SQRT3*CI)
      W(16)=CACOS(SQRT2-.25E0*PI*CI)
      W(17)=CSINH(1.E0-1.E0/PI+CI)
      W(18)=CSINH(1.E0+PI*CI)
      W(19)=CCOSH(1.E0-.5E0*PI*CI)
      W(20)=CCOSH(-1.E0+2.E0*CI)
      W(21)=CTANH(-1.E0+2.E0*CI)
      W(22)=CTANH(1.E0+PI*CI)
      W(23)=CASINH(-.117520119364380E1+0.E0*CI)
      W(24)=CASINH(2.5E0+1.75E0*CI)
      W(25)=CACOSH(1.E0-2.E0*CI)
      W(26)=CACOSH(2.E0*CI)
      W(27)=CLNGAM(1.1E0+3.2E0*CI)
      W(28)=CLNGAM(1.9E0+2.4E0*CI)
      W(29)=CPSI(.5E0+0.E0*CI)
      W(30)=CPSI(1.E0+5.E0*CI)
      W(31)=CATAN(.3125E-1+.541265877365273E-1*CI)
      W(32)=CATAN(-.5E0+.866025403784438E0*CI)
C
CHECK FOR POSSIBLE ERRORS
C
      ERRMAX=R2MACH(4)
      ERRTOL=SQRT(ERRMAX)
      DO 10 I=1,32
        ABSERR=CABS(C(I)-W(I))
        RELERR=ABSERR/CABS(C(I))
        ERRMAX=AMAX1(RELERR,ERRMAX)
        IF (RELERR.GT.ERRTOL.AND.KPRINT.NE.0)
     1 WRITE (ID,620) I,RELERR,ABSERR
   10 CONTINUE
      IPASS=0
      IF (ERRMAX.LE.ERRTOL) IPASS=1
      IF(IPASS.NE.0.AND.KPRINT.GE.2)WRITE (ID,610)
  610 FORMAT('COMPLEX SPECIAL FUNCTION ROUTINES O.K.')
  620 FORMAT('FOR  I =',I3,' TEST FAILS WITH  RELERR =',
     .       E23.15,' AND  ABSERR =',E23.15)
                                        RETURN
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
