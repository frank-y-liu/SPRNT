C
C   DRIVER FOR TESTING CMLIB ROUTINES
C     HS3CRI   HS3CRT
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XSETF(1)
      CALL XERMAX(1000)
C   TEST VHS3
      CALL VHS3QX(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR SUBLIBRARY VHS3
     1 HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- SUBLIBRARY VHS3 PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE VHS3QX(KPRINT,IPASS)
      COMMON/UNIT/LUN
      LOGICAL FIRST
      DIMENSION BDX(7,3,2),BDY(6,3,2),BDZ(6,7,2),F(6,7,3),W(230)
      DIMENSION FF(6,7,3)
      FIRST=.TRUE.
      IPASS=1
      TOL=R2MACH(4)*500.0E0
      IF(KPRINT.GT.2) WRITE (LUN,3)
    3 FORMAT (1H1,10X,' *** TEST VHS3 SUBLIBRARY *** ')
      Z = UNI(19867)
      LDIMF=6
      MDIMF=7
      L=4
      M=5
      N=3
      DX=1./L
      DY=1./M
      DZ=1./N
      DZSQ=1./DZ**2
      DYSQ=1./(DY*DY)
      DXSQ=1./(DX*DX)
      ERRMN=0.
      DO 900 LB=1,5
      LBDCND=LB-1
      DO 900 MB=1,5
      MBDCND=MB-1
      DO 900 NB=1,5
      NBDCND=NB-1
      DO 900 LAMBDA=1,2
      ELMBDA=1-LAMBDA
      CALL HS3CRI(0.,1.,L,LBDCND,0.,1.,M,MBDCND,0.,1.,N,NBDCND,
     1           ELMBDA,LDIMF,MDIMF,IERROR,W)
      ERR=-1.
      DO 900 NTIME=1,2
      IF (IERROR.NE.0) GO TO 710
      DO 100 K=1,N
      DO 100 J=1,M
      DO 100 I=1,L
      F(I,J,K)=UNI(0)
  100 FF(I,J,K)=F(I,J,K)
      DO 200 K=1,N
      DO 200 I=1,L
      BDY(I,K,1)=UNI(0)
  200 BDY(I,K,2)=UNI(0)
      DO 300 K=1,N
      DO 300 J=1,M
      BDX(J,K,1)=UNI(0)
  300 BDX(J,K,2)=UNI(0)
      DO 310 I=1,L
      DO 310 J=1,M
      BDZ(I,J,1)=UNI(0)
  310 BDZ(I,J,2)=UNI(0)
      CALL HS3CRT(BDX(1,1,1),BDX(1,1,2),BDY(1,1,1),BDY(1,1,2),
     1            BDZ(1,1,1),BDZ(1,1,2),LDIMF,MDIMF,F,PERTRB,W)
      DO 700 K=1,N
      DO 700 J=1,M
      DO 700 I=1,L
      IF (I .GT. 1) GO TO 440
      GO TO (410,420,420,430,430),LB
  410 X=(F(L,J,K)-2.*F(1,J,K)+F(2,J,K))*DXSQ
      GO TO 500
  420 X=(2.*BDX(J,K,1)-3.*F(1,J,K)+F(2,J,K))*DXSQ
      GO TO 500
  430 X=(-DX*BDX(J,K,1)-F(1,J,K)+F(2,J,K))*DXSQ
      GO TO 500
  440 IF (I .LT. L)  GO TO 480
      GO TO ( 450,460,470,470,460),LB
  450 X=(F(L-1,J,K)-2.*F(L,J,K)+F(1,J,K))*DXSQ
      GO TO 500
  460 X=(F(L-1,J,K)-3.*F(L,J,K)+2.*BDX(J,K,2))*DXSQ
      GO TO 500
  470 X=(F(L-1,J,K)-F(L,J,K)+DX*BDX(J,K,2))*DXSQ
      GO TO 500
  480 X=(F(I-1,J,K)-2.*F(I,J,K)+F(I+1,J,K))*DXSQ
  500 IF (J .GT. 1)  GO TO 530
      GO TO ( 505,510,510,520,520),MB
  505 Y=(F(I,M,K)-2.*F(I,1,K)+F(I,2,K))*DYSQ
      GO TO 570
  510 Y=(2.*BDY(I,K,1)-3.*F(I,1,K)+F(I,2,K))*DYSQ
      GO TO 570
  520 Y=(-DY*BDY(I,K,1)-F(I,1,K)+F(I,2,K))*DYSQ
      GO TO 570
  530 IF (J .LT. M)  GO TO 560
      GO TO (535,540,550,550,540),MB
  535 Y=(F(I,M-1,K)-2.*F(I,M,K)+F(I,1,K))*DYSQ
      GO TO 570
  540 Y=(F(I,M-1,K)-3.*F(I,M,K)+2.*BDY(I,K,2))*DYSQ
      GO TO 570
  550 Y=(F(I,M-1,K)-F(I,M,K)+DY*BDY(I,K,2))*DYSQ
      GO TO 570
  560 Y=(F(I,J-1,K)-2.*F(I,J,K)+F(I,J+1,K))*DYSQ
  570 CONTINUE
      IF (K.GT.1) GO TO 640
      GO TO (610,620,620,630,630),NB
  610 Z=(F(I,J,N)-2.*F(I,J,1)+F(I,J,2))*DZSQ
      GO TO 690
  620 Z=(2.*BDZ(I,J,1)-3.*F(I,J,1)+F(I,J,2))*DZSQ
      GO TO 690
  630 Z=(-DZ*BDZ(I,J,1)-F(I,J,1)+F(I,J,2))*DZSQ
      GO TO 690
  640 IF (K.LT.N) GO TO 680
      GO TO (650,660,670,670,660),NB
  650 Z=(F(I,J,N-1)-2.*F(I,J,N)+F(I,J,1))*DZSQ
      GO TO 690
  660 Z=(F(I,J,N-1)-3.*F(I,J,N)+2.*BDZ(I,J,2))*DZSQ
      GO TO 690
  670 Z=(F(I,J,N-1)-F(I,J,N)+DZ*BDZ(I,J,2))*DZSQ
      GO TO 690
  680 Z=(F(I,J,K-1)-2.*F(I,J,K)+F(I,J,K+1))*DZSQ
  690 CONTINUE
      ZZ=ABS(X+Y+Z+ELMBDA*F(I,J,K)-FF(I,J,K)+PERTRB)
      IF (ZZ .GT. ERR) ERR=ZZ
  700 CONTINUE
      ERRMN=ERRMN+ERR
  710 IF(KPRINT.GT.2) THEN
       IF (FIRST) WRITE (LUN,1)
       WRITE (LUN,2) LBDCND,MBDCND,NBDCND,ELMBDA,IERROR,ERR,PERTRB
       FIRST = .FALSE.
      ENDIF
  900 CONTINUE
      ERRMN=ERRMN/500.
      IF(ERRMN.GT.TOL) IPASS=2
      IF ((KPRINT.EQ.3).OR.(KPRINT.GE.1.AND.IPASS.NE.1)) THEN
       WRITE(LUN,4) ERRMN
       WRITE(LUN,5) TOL
       IF(KPRINT.NE.3) WRITE(LUN,6)
      ENDIF
    1 FORMAT (///,' LBDCND MBDCND NBDCND ELMBDA    IERROR',
     *        6X,'RESIDUAL',6X,'PERTRB',///)
    2 FORMAT (3I6,F8.0,I10,2E15.5)
    4 FORMAT(/,' ** MEAN ERROR FOR ALL TESTS IS ** ' ,E15.5)
    5 FORMAT (' **** REQUIRED TOLERANCE IS ***** ',E15.5)
    6 FORMAT (/,' RUN AGAIN WITH PRINT OPTION = 3 FOR FULL',
     *         1X,'RESULTS')
      RETURN
      END
