C
C   DRIVER FOR TESTING SLATEC PROGRAM
C      SGLSS
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XSETF(1)
      CALL XERMAX(1000)
      IF(KPRINT.LE.1) CALL XSETF(0)
C   TEST SGLSS
      CALL QCGLSS(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- THE TEST FOR SGLSS SUBLIBRARY FAILED,
     1   ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- THE SGLSS SUBLIBRARY PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      SUBROUTINE QCGLSS(KPRINT,IPASS)
C***BEGIN PROLOGUE  QCGLSS
C***DATE WRITTEN   811026   (YYMMDD)
C***REVISION DATE  820801   (YYMMDD)
C***AUTHOR  VOORHEES, E.A., LANL
C***PURPOSE  QUICK CHECK FOR  SGLSS .
C***DESCRIPTION
C
C      REVISED BY W. VANDEVENDER TO MATCH OTHER SLATEC QUICK CHECKS
C
C      QUICK CHECK SUBROUTINE  QCGLSS  TESTS THE EXECUTION
C      OF THE GENERAL LINEAR SYSTEM SOLVER, SGLSS .  THE
C      SGLSS  SUBROUTINE PACKAGE WAS WRITTEN BY T. MANTEUFFEL
C      (LANL).
C
C      A TITLE LINE AND A SUMMARY LINE ARE ALWAYS OUTPUTTED
C      BY QCGLSS.  THE SUMMARY LINE GIVES A COUNT OF THE
C      NUMBER OF PROBLEMS DETECTED DURING THE TEST.
C
C      THE REAL QUANTITIES FOR THE COMPUTED SOLUTION VECTOR
C      X  AND THE CORRESPONDING  RNORM  ARE COMPARED AGAINST
C      STORED VALUES.  DISAGREEMENT OCCURS IF A DIFFER-
C      ENCE IS SQRT(R2MACH(4) OR MORE.  THE RETURNED VALUE (IN-
C      TEGER) OF  INFO  IS ALSO CHECKED.  FOUR CASES ARE RUN,
C      TWO INVOLVING  LLSIA  AND TWO INVOLVING  ULSIA .
C
C      QCGLSS REQUIRES NO INPUT ARGUMENTS.  ON RETURN, NERR
C      (INTEGER TYPE) CONTAINS THE COUNT OF THE NUMBER OF
C      PROBLEMS DETECTED BY  QCGLSS .
C
C***ROUTINES CALLED  SGLSS,XSETF(SLATEC),R2MACH(SLATEC)
C***END PROLOGUE  QCGLSS
C
      REAL AA(4,4,2),A(4,4),BB(4,2),B(4),XX(4,4),DELMAX,DELX,R
      REAL WORK(20)
      INTEGER INF(4),LIST(2),NERR,KPROG,KCASE
      INTEGER IWORK(7),INFO,LUN
      COMMON/UNIT/LUN
      DATA AA/1.,.5,1.,.25,0.,2.,0.,1.,2.,-1.,1.,0.,0.,0.,0.,0.,
     1 1.,2.,-1.,0.,0.,1.,2.,0.,-1.,0.,1.,0.,1.,0.,1.,0./
      DATA BB/3.,1.5,2.,1.25,1.,3.,3.,0./
      DATA XX/.9999999999999787,1.000000000000007,1.000000000000007,
     1 0.,.8095238095238102,1.047619047619044,1.095238095238081,0.,
     1 .7777777777777857,1.444444444444429,.3333333333333393,
     1 .5555555555555500,
     1 .3333333333333321,0.0,-.3333333333333286,.3333333333333286/
      DATA INF/0,1,0,2/
      DATA LIST/1HL,1HU/
      INFO = 0
      NERR = 0
      R = SQRT(R2MACH(4))
      IF (KPRINT.GE.2) WRITE(LUN,800)
800   FORMAT(/,'*   QCGLSS - QUICK CHECK FOR SGLSS (LLSIA AND ULSIA)'/)
      DO 60 KPROG=1,2
        DO 50 KCASE=1,2
C
C     FORM BASIC MATRIX  A  AND VECTOR  B .  (CASE 1)
C
          DO 10  I=1,4
            DO 5  J=1,4
              A(I,J) = AA(I,J,KPROG)
5           CONTINUE
            B(I) = BB(I,KPROG)
10        CONTINUE
C
C     MAKE 3 ROWS IDENTICAL FOR CASE 2.
C
          IF(KCASE .EQ. 1) GO TO 25
          DO 20  I=2,3
            DO 15  J=1,4
              A(I,J) = A(1,J)
15          CONTINUE
            B(I) = B(1)
20        CONTINUE
25        CONTINUE
C
C     SOLVE FOR VECTOR  X .
C
          INFO = 0
          IF(KPROG .EQ. 1)CALL SGLSS(A,4,4,3,B,4,1,RNORM,WORK,20,IWORK,
     1 7,INFO)
          IF(KPROG .EQ. 2)CALL SGLSS(A,4,3,4,B,4,1,RNORM,WORK,20,IWORK,
     1 7,INFO)
C
C     TEST COMPUTED  X , RNORM , AND  INFO .
C
          KK = 2*(KPROG - 1) + KCASE
          DELMAX = 0.0E0
          DO 30  I=1,4
            DELX = ABS(B(I)-XX(I,KK))
            DELMAX = AMAX1(DELMAX,DELX)
30        CONTINUE
          IF(DELMAX .LT. R) GO TO 35
          NERR = NERR + 1
          IF(KPRINT.GE.2)WRITE(LUN,801) LIST(KPROG),KCASE,DELMAX
801       FORMAT(3X,'PROBLEM WITH ',A1,'LSIA',', CASE ',I1,'.',3X,
     1     'MAX ABS ERROR OF',E11.4,/)
35        CONTINUE
          IF(RNORM .LT. R) GO TO 40
          NERR = NERR + 1
          IF(KPRINT.GE.2)WRITE(LUN,802) LIST(KPROG),KCASE,RNORM
802       FORMAT(3X,'PROBLEM WITH ',A1,'LSIA',', CASE ',I1,'.',
     1     3X,'RNORM (TOO LARGE) IS',E11.4,/)
40        CONTINUE
          IF(INFO .EQ. INF(KK)) GO TO 45
          NERR = NERR + 1
          IF(KPRINT.GE.2)WRITE(LUN,803) LIST(KPROG),KCASE,INFO,INF(KK)
803       FORMAT(3X,'PROBLEM WITH ',A1,'LSIA',', CASE ',I1,'.',
     1     3X,'INFO=',I1,' (SHOULD = ',I1,')',/)
45        CONTINUE
50      CONTINUE
60    CONTINUE
C
C     SUMMARY PRINT
C
      IPASS=0
      IF(NERR.EQ.0)IPASS=1
      IF(NERR .NE. 0 .AND. KPRINT.NE.0)WRITE(LUN,804) NERR
      IF(NERR .EQ. 0 .AND. KPRINT.GT.1)WRITE(LUN,805)
804   FORMAT(/,'**** QCGLSS DETECTED A TOTAL OF ',I2,
     1  'PROBLEMS WITH SGLSS. ****',/)
805   FORMAT(5X,'QCGLSS DETECTED NO PROBLEMS WITH SGLSS.',/)
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
