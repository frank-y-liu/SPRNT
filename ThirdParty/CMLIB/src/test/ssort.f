C
C   DRIVER FOR TESTING CMLIB ROUTINES
C      ISORT     SSORT     CSORT
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XSETF(1)
      CALL XERMAX(1000)
C   TEST SSORT,ISORT
      CALL SSORQ1(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C   TEST CSORT
      CALL SSORQ2(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR THE SSORT SUBLIBR
     1 ARY FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- THE SSORT SUBLIBRARY PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE SSORQ1(KPRINT,IPASS)
      DIMENSION X(10),Y(10),IX(10),IY(10)
      COMMON/MSG/ICNT,ITEST(38)
      COMMON/UNIT/LUN
      DATA X(1),Y(1),IX(1),IY(1),X(2),Y(2),IX(2),IY(2),X(3),Y(3),IX(3),
     1IY(3),X(4),Y(4),IX(4),IY(4),X(5),Y(5),IX(5),IY(5),X(6),Y(6),IX(6),
     2IY(6),X(7),Y(7),IX(7),IY(7),X(8),Y(8),IX(8),IY(8),X(9),Y(9),IX(9),
     3IY(9),X(10),Y(10),IX(10),IY(10)/
     4 1.,1.,3,3,-1.,-1.,2,2,2.,2.,4,4, -2.,-2.,-2,-2, 2.,2.,2,2,
     5 0.,0.,0,0, -2.,-2.,-1,-1, 9.,9.,9,9, -9.,-9.,-9,-9,-0.,-0.,0,0/
      CALL SSORT(X,Y,10,2)
      IF(KPRINT.GT.2)WRITE(LUN,100) (X(I),Y(I),I=1,10)
      CALL ISORT(IX,IY,10,2)
      IF(KPRINT.GT.2)WRITE(LUN,101) (IX(I),IY(I),I=1,10)
      IPASS=0
      IF(IX(1).EQ.-9 .AND. X(1).EQ.-9.)IPASS=1
      IF(IPASS .EQ. 1.AND.KPRINT.GE.2) THEN
       WRITE(LUN,200)
       WRITE(LUN,220)
      ENDIF
      IF(IPASS .EQ. 0.AND.KPRINT.NE.0) THEN
       WRITE(LUN,201)
       WRITE(LUN,221)
      ENDIF
  200 FORMAT(' ** TEST FOR SSORT PASSED ** ')
  220 FORMAT(' ** TEST FOR ISORT PASSED ** ')
  201 FORMAT(' ** TEST FOR SSORT FAILED ** ')
  221 FORMAT(' ** TEST FOR ISORT FAILED ** ')
  100 FORMAT(2E16.8)
  101 FORMAT(2I5)
      RETURN
      END
      SUBROUTINE SSORQ2(KPRINT,IPASS)
      COMMON/UNIT/LUN
      INTEGER KPRINT,IPASS
      CHARACTER*2 U,V,W
      DIMENSION U(10),V(10),W(4)
      DATA (U(I),I=1,5)/'AA','BA',' Z','Z ','  '/
      IPASS=1
      CALL CSORT(U,V,5,1,W)
      IF(KPRINT.GT.2) PRINT 300,(U(I),I=1,5)
  300 FORMAT(2X,A2)
      IF(U(5).EQ.'Z ') THEN
       IF(KPRINT.GE.2) WRITE(LUN,200)
      ELSE
       IPASS=2
       IF(KPRINT.GE.1) WRITE(LUN,201)
      ENDIF
  200 FORMAT(' ** TEST FOR CSORT PASSED ** ')
  201 FORMAT(' ** TEST FOR CSORT FAILED ** ')
      RETURN
      END
