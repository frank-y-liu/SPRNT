C
C   DRIVER FOR TESTING CMLIB ROUTINES
C      BVSUP
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XSETF(0)
      CALL XERMAX(1000)
C  TEST BVSUP
      CALL QXBVSP(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR SUBLIBRARY,
     1 BVSUP HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/'----- BVSUP PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      SUBROUTINE QXBVSP(KPRINT,IPASS)
      DIMENSION Y(4,15),XPTS(15),A(2,4),ALPHA(2),B(2,4),BETA(2)
      REAL YANS(2,15)
      INTEGER ITEST(38), ITMP(9)
      COMMON /MSG/ ICNT,ITEST
      COMMON WORK(1000),IWORK(100)
      COMMON /SAVEX/ XSAVE,TERM
      COMMON /UNIT/ LUN
      DATA YANS(1,1),YANS(2,1),YANS(1,2),YANS(2,2),
     1     YANS(1,3),YANS(2,3),YANS(1,4),YANS(2,4),
     2     YANS(1,5),YANS(2,5),YANS(1,6),YANS(2,6),
     3     YANS(1,7),YANS(2,7),YANS(1,8),YANS(2,8),
     4     YANS(1,9),YANS(2,9),YANS(1,10),YANS(2,10),
     5     YANS(1,11),YANS(2,11),YANS(1,12),YANS(2,12),
     6     YANS(1,13),YANS(2,13),YANS(1,14),YANS(2,14),
     7     YANS(1,15),YANS(2,15)/
     8      5.000000000E+00,-6.888880126E-01, 8.609248635E+00,
     9     -1.083092311E+00, 1.674923836E+01,-2.072210073E+00,
     1      3.351098494E+01,-4.479263780E+00, 6.601103894E+01,
     2     -8.909222513E+00, 8.579580988E+01,-1.098742758E+01,
     3      1.106536877E+02,-1.402469444E+01, 1.421228220E+02,
     4     -1.742236546E+01, 1.803383474E+02,-2.086465851E+01,
     5      2.017054332E+02,-1.990879843E+01, 2.051622475E+02,
     6     -1.324886978E+01, 2.059197452E+02, 1.051529813E+01,
     7      1.972191446E+02, 9.320592785E+01, 1.556894846E+02,
     8      3.801682434E+02, 1.818989404E-12, 1.379853993E+03/
      DATA XPTS(1),XPTS(2),XPTS(3),XPTS(4),XPTS(5),
     1     XPTS(6),XPTS(7),XPTS(8),XPTS(9),XPTS(10),
     2     XPTS(11),XPTS(12),XPTS(13),XPTS(14),XPTS(15)/
     3     60.,55.,50.,45.,40.,38.,36.,34.,32.,31.,30.8,30.6,
     4     30.4,30.2,30./
C
      IF (KPRINT .GE. 2) WRITE (LUN,800)
  800 FORMAT ('1')
      IF (KPRINT.GE.2) WRITE (LUN,810)
  810 FORMAT (/'BVSUP QUICK CHECK')
C
C-----INITIALIZE VARIABLES FOR TEST PROBLEM.
C
      DO 10 I = 1, 9
        ITMP(I) = 0
   10 CONTINUE
      IPASS = 0
      ICNT = 1
      TOL = 1.0E-03
      XSAVE = 0.
      NROWY = 4
      NCOMP = 2
      NXPTS = 15
      A(1,1) = 1.0
      A(1,2) = 0.0
      NROWA = 2
      ALPHA(1) = 5.0
      NIC = 1
      B(1,1) = 1.0
      B(1,2) = 0.0
      NROWB = 2
      BETA(1) = 0.0
      NFC = 1
      IGOFX = 1
      RE = 1.0E-05
      AE = 1.0E-05
      NDW = 1000
      NDIW = 100
      NEQIVP = 0
      ITEST(ICNT) = 1
C
      DO 20 I = 1, 15
        IWORK(I) = 0
   20 CONTINUE
      CALL BVSUP(Y,NROWY,NCOMP,XPTS,NXPTS,A,NROWA,ALPHA,NIC,B,NROWB,
     1     BETA,NFC,IGOFX,RE,AE,IFLAG,WORK,NDW,IWORK,NDIW,NEQIVP)
C
C-----IF IFLAG = 0, WE HAVE A SUCCESSFUL SOLUTION; OTHERWISE, SKIP
C     THE ARGUMENT CHECKING AND GO TO THE END.
C
      IF (IFLAG .EQ. 0) GO TO 30
      ITEST(ICNT) = 0
      IF (KPRINT .GT. 1) WRITE (LUN,820) IFLAG
  820 FORMAT (10X,'IFLAG =',I2)
      GO TO 170
C
C-----CHECK THE ACCURACY OF THE SOLUTION.
C
   30 NUMORT = IWORK(1)
      DO 50 J = 1, NXPTS
        DO 40 L = 1, 2
          IF((ABS((YANS(L,J)-Y(L,J))/(YANS(L,J)))) .GT. TOL
     1      .AND. (ABS(YANS(L,J)-Y(L,J))) .GT. TOL) ITEST(ICNT) = 0
   40   CONTINUE
   50 CONTINUE
C
C-----CHECK FOR SUPRESSION OF PRINTING.
C
      IF (KPRINT .EQ. 0) GO TO 190
      IF (KPRINT.EQ.1 .AND. ITEST(ICNT).EQ.1) GO TO 190
      IF (KPRINT.EQ.1 .AND. ITEST(ICNT).EQ.0) GO TO 70
      IF (KPRINT .NE. 3 .AND. ITEST(ICNT) .NE. 0) GO TO 70
      WRITE (LUN,830)
  830 FORMAT (/'ACCURACY TEST')
      WRITE (LUN,840) NUMORT
  840 FORMAT (/'NUMBER OF ORTHONORMALIZATIONS =',I3)
      WRITE (LUN,850) (WORK(J),J = 1, NUMORT)
  850 FORMAT (/'ORTHONORMALIZATION POINTS ARE',/(1X,4F10.2))
      WRITE (LUN,860)
  860 FORMAT (//2X,'X',14X,'Y',17X,'Y-PRIME',/)
      DO 60 J = 1, NXPTS
   60   WRITE (LUN,870) XPTS(J),(Y(L,J),L = 1, NCOMP)
  870 FORMAT (F5.1,2E20.7)
C
C-----SEND MESSAGE INDICATING PASSAGE OR FAILURE OF TESTS.
C
   70 CALL PASS
C
C-----ERROR MESSAGE TESTS.
C
      IF (KPRINT.EQ.1) GO TO 190
      ICNT = ICNT + 1
      KONT = 1
      WRITE (LUN,880)
  880 FORMAT (/'(5) TESTS OF IFLAG VALUES ')
C-----NROWY LESS THAN NCOMP
      KOUNT = 1
      NROWY = 1
      GO TO 150
   80 CONTINUE
      WRITE (LUN,900) IFLAG
  900 FORMAT(/'IFLAG SHOULD BE -2, IFLAG = ',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----IGOFX NOT EQUAL TO 0 OR 1
      KOUNT = 2
      NROWY = 2
      IGOFX = 3
      GO TO 150
   90 CONTINUE
      WRITE (LUN,910) IFLAG
  910 FORMAT(/'IFLAG SHOULD BE -2, IFLAG = ',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----RE OR AE NEGATIVE
      KOUNT = 3
      IGOFX = 1
      RE = -1.
      AE = -2.
      GO TO 150
  100 CONTINUE
      WRITE (LUN,930) IFLAG
  930 FORMAT(/'IFLAG SHOULD BE -2, IFLAG = ',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----NROWA LESS THAN NIC
      KOUNT = 4
      RE = 1.0E-05
      AE = 1.0E-05
      NROWA = 0
C***TEST BYPASSED BECAUSE OF VAX DIFFICULTIES
C      GO TO 150
  110 CONTINUE
      WRITE (LUN,940) IFLAG
  940 FORMAT(/'IFLAG SHOULD BE -2, IFLAG = ',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----NROWB LESS THAN NFC
      KOUNT = 5
      NROWA = 2
      NROWB = 0
C***TEST BYPASSED BECAUSE OF VAX DIFFICULTIES
C      GO TO 150
  120 CONTINUE
      WRITE (LUN,950) IFLAG
  950 FORMAT(/'IFLAG SHOULD BE -2, IFLAG =',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----STORAGE ALLOCATION IS INSUFFICIENT
      KOUNT = 6
      NROWB = 2
      NDIW = 17
      GO TO 150
  130 CONTINUE
      WRITE (LUN,960) IFLAG
  960 FORMAT(/'IFLAG SHOULD BE -1, IFLAG =',I3)
      IF (IFLAG .EQ. (-1)) ITMP(KONT) = 1
      KONT = KONT + 1
C-----INCORRECT ORDERING OF XPTS
      KOUNT = 7
      NDIW = 100
      SVE = XPTS(1)
      XPTS(1) = XPTS(4)
      XPTS(4) = SVE
      GO TO 150
  140 CONTINUE
      WRITE (LUN,970) IFLAG
  970 FORMAT(/'IFLAG SHOULD BE -2, IFLAG =',I3)
      IF (IFLAG .EQ. (-2)) ITMP(KONT) = 1
      GO TO 170
  150 CONTINUE
      DO 160 I = 1, 15
        IWORK(I) = 0
  160 CONTINUE
      CALL BVSUP(Y,NROWY,NCOMP,XPTS,NXPTS,A,NROWA,ALPHA,NIC,B,NROWB,
     1     BETA,NFC,IGOFX,RE,AE,IFLAG,WORK,NDW,IWORK,NDIW,NEQIVP)
      GO TO (80,90,100,110,120,130,140), KOUNT
C
C-----SEE IF IFLAG TESTS PASSED
C
  170 IPSS = 1
      DO 180 I = 1, KONT
        IPSS = IPSS*ITMP(I)
  180 CONTINUE
      ITEST(ICNT) = IPSS
      CALL PASS
C
C-----SEE IF ALL TESTS PASSED.
C
  190 IPASS = 1
      DO 200 I = 1, ICNT
        IPASS = IPASS*ITEST(I)
  200 CONTINUE
      IF (IPASS .EQ. 1 .AND. KPRINT .GT. 1) WRITE (LUN,980)
      IF (IPASS .EQ. 0 .AND. KPRINT .NE. 0) WRITE (LUN,990)
  980 FORMAT(/'***** BVSUP SUBLIBRARY PASSED ALL TESTS ***** ')
  990 FORMAT(/'***** BVSUP SUBLIBRARY FAILED SOME TESTS ***** ')
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE FMAT(X,Y,YP)
      DIMENSION Y(*),YP(*)
      COMMON /SAVEX/XSAVE,TERM
      YP(1) = Y(2)
      IF (X .EQ. XSAVE) GO TO 10
      XSAVE=X
      TANX=TAN(X/57.2957795130823)
      TERM=3.0/TANX+2.0*TANX
   10 YP(2) = -TERM*Y(2)-0.7*Y(1)
      RETURN
      END
      SUBROUTINE GVEC(X,G)
      DIMENSION G(*)
      G(1) = 0.0
      G(2) = 1.0+COS(X)
      RETURN
      END
      SUBROUTINE PASS
      COMMON /UNIT/ LUN
      COMMON /MSG/ ICNT,ITEST
      DIMENSION ITEST(38)
      IF(ITEST(ICNT).EQ.0) GO TO 10
      WRITE(LUN,100) ICNT
  100 FORMAT(/'TEST NUMBER',I5,'    PASSED')
      RETURN
   10 WRITE(LUN,200) ICNT
  200 FORMAT(/'*****TEST NUMBER',I5,'    FAILED *****')
      RETURN
      END
      SUBROUTINE UIVP(X,Y,YP)
C   THIS IS A DUMMY ROUTINE SPECIFICALLY FOR THE CRAY LOADER
      STOP
      END
      SUBROUTINE UVEC(X,Y,YP)
C   THIS IS A DUMMY ROUTINE SPECIFICALLY FOR THE CRAY LOADER
      STOP
      END
