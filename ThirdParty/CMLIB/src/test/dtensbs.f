C
C   DRIVER FOR TESTING CMLIB ROUTINES
C     DB2INK  DB2VAL
C     DB3INK  DB3VAL
C
C    ONE INPUT DATA CARD IS REQUIRED
C         READ(LIN,1) KPRINT,TIMES
C    1    FORMAT(I1,E10.0)
C
C     KPRINT = 0   NO PRINTING
C              1   NO PRINTING FOR PASSED TESTS, SHORT MESSAGE
C                  FOR FAILED TESTS
C              2   PRINT SHORT MESSAGE FOR PASSED TESTS, FULLER
C                  INFORMATION FOR FAILED TESTS
C              3   PRINT COMPLETE QUICK-CHECK RESULTS
C
C                ***IMPORTANT NOTE***
C         ALL QUICK CHECKS USE ROUTINES R2MACH AND D2MACH
C         TO SET THE ERROR TOLERANCES.
C     TIMES IS A CONSTANT MULTIPLIER THAT CAN BE USED TO SCALE THE
C     VALUES OF R1MACH AND D1MACH SO THAT
C               R2MACH(I) = R1MACH(I) * TIMES   FOR I=3,4,5
C               D2MACH(I) = D1MACH(I) * TIMES   FOR I=3,4,5
C     THIS MAKES IT EASILY POSSIBLE TO CHANGE THE ERROR TOLERANCES
C     USED IN THE QUICK CHECKS.
C     IF TIMES .LE. 0.0 THEN TIMES IS DEFAULTED TO 1.0
C
C              ***END NOTE***
C
      COMMON/UNIT/LUN
      COMMON/MSG/ICNT,JTEST(38)
      COMMON/XXMULT/TIMES
      LUN=I1MACH(2)
      LIN=I1MACH(1)
      ITEST=1
C
C     READ KPRINT,TIMES PARAMETERS FROM DATA CARD..
C
      READ(LIN,1) KPRINT,TIMES
1     FORMAT(I1,E10.0)
      IF(TIMES.LE.0.) TIMES=1.
      CALL XSETUN(LUN)
      CALL XERMAX(1000)
      CALL XSETF(-1)
C   TEST DB2INK  DB2VAL
      CALL DTENQ1(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C   TEST DB3INK  DB3VAL
      CALL DTENQ2(KPRINT,IPASS)
      ITEST=ITEST*IPASS
C
      IF(KPRINT.GE.1.AND.ITEST.NE.1) WRITE(LUN,2)
2     FORMAT(/' ***** WARNING -- AT LEAST ONE TEST FOR SUBLIBRARY DTENSBS
     1  HAS FAILED ***** ')
      IF(KPRINT.GE.1.AND.ITEST.EQ.1) WRITE(LUN,3)
3     FORMAT(/' ----- SUBLIBRARY DTENSBS PASSED ALL TESTS ----- ')
      END
      DOUBLE PRECISION FUNCTION D2MACH(I)
      DOUBLE PRECISION D1MACH
      COMMON/XXMULT/TIMES
      D2MACH=D1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      D2MACH = D2MACH * DBLE(TIMES)
      RETURN
      END
      REAL FUNCTION R2MACH(I)
      COMMON/XXMULT/TIMES
      R2MACH=R1MACH(I)
      IF(I.EQ.1.OR. I.EQ.2) RETURN
      R2MACH = R2MACH * TIMES
      RETURN
      END
      SUBROUTINE DTENQ1(KPRINT,IPASS)
C  ------------------------------------------------------
C  QUICKTEST FOR 2D TENSOR PRODUCT B-SPLINE INTERPOLATION
C              DOUBLE PRECISION VERSION
C  ------------------------------------------------------
C
      DOUBLE PRECISION TOL,VAL,TRU,ERR,ERRMAX,F,D2MACH,DB2VAL
      DOUBLE PRECISION X(20),Y(20),TX(40),TY(40),FCN(20,20),WORK(1240)
      INTEGER NXVAL(3),NYVAL(3),KXVAL(3),KYVAL(3),KPRINT,IPASS
      LOGICAL FAIL
      COMMON/UNIT/ LUN
C
      DATA NXVAL(1),NXVAL(2),NXVAL(3) /3,12,20/
      DATA NYVAL(1),NYVAL(2),NYVAL(3) /3,14,19/
      DATA KXVAL(1),KXVAL(2),KXVAL(3) /2,4,7/
      DATA KYVAL(1),KYVAL(2),KYVAL(3) /2,4,9/
C
      FAIL = .FALSE.
      TOL = 2000.0D0*D2MACH(4)
      IDX = 0
      IDY = 0
      IPASS=1
C
      DO 500 KASE=1,3
C
C  CHOSE PARAMETERS FOR THIS CASE
C
         NX = NXVAL(KASE)
         NY = NYVAL(KASE)
         KX = KXVAL(KASE)
         KY = KYVAL(KASE)
         DO 100 I=1,NX
            X(I) = DBLE(I-1)/DBLE(NX-1)
  100    CONTINUE
         DO 110 J=1,NY
            Y(J) = DBLE(J-1)/DBLE(NY-1)
  110    CONTINUE
         DO 150 I=1,NX
            DO 150 J=1,NY
               FCN(I,J) = F(X(I),Y(J))
  150    CONTINUE
C
C  INTERPOLATE
C
         IFLAG = 0
         CALL DB2INK(X,NX,Y,NY,FCN,20,KX,KY,TX,TY,
     *              FCN,WORK,IFLAG)
C
C  COMPUTE MAX ERROR AT INTERPOLATION POINTS
C
         ERRMAX = 0.0D0
         DO 200 I=1,NX
            DO 200 J=1,NY
               VAL = DB2VAL(X(I),Y(J),IDX,IDY,TX,TY,NX,NY,
     *                     KX,KY,FCN,WORK)
               TRU = F(X(I),Y(J))
               ERR = DABS(TRU-VAL)
               ERRMAX = DMAX1(ERR,ERRMAX)
  200    CONTINUE
C
C  CHECK MAX ERROR AGAINST TOLERANCE
C
         IF (ERRMAX .LT. TOL)  GO TO 300
            FAIL = .TRUE.
            IPASS=2
            IF(KPRINT.GE.2) THEN
             WRITE(LUN,3000) KASE,TOL,NX,NY,KX,KY
             WRITE(LUN,*) ' ERROR IS ',ERRMAX
            ENDIF
  300    CONTINUE
C
  500 CONTINUE
C
C  SUMMARIZE RESULTS
C
      IF (FAIL .AND. KPRINT.GE.1)  WRITE(LUN,3001)
      IF (.NOT. FAIL .AND. KPRINT.GE.2)  WRITE(LUN,3002)
C
 3000 FORMAT(//' DB2INK/DB2VAL : FAIL CASE ',I1,' AT TOLERANCE ',1P,
     *       D10.4 / 15X,'(NX=',I2,' NY=',I2,' KX=',I2,' KY=',I2,')' )
 3001 FORMAT(// ' ** TEST FOR SUBROUTINES DB2INK,DB2VAL FAILED ** ')
 3002 FORMAT(// ' ** TEST FOR SUBROUTINES DB2INK,DB2VAL PASSED ** ')
      RETURN
      END
      DOUBLE PRECISION FUNCTION F(X,Y)
      DOUBLE PRECISION X,Y,PIOV2
      PIOV2 = 2.0D0 * DATAN(1.0D0)
      F = 0.50D0 * (Y *EXP(-X) + COS(PIOV2 * Y) )
      RETURN
      END
      SUBROUTINE DTENQ2(KPRINT,IPASS)
C  ------------------------------------------------------
C  QUICKTEST FOR 3D TENSOR PRODUCT B-SPLINE INTERPOLATION
C              DOUBLE PRECISION VERSION
C  ------------------------------------------------------
C
      DOUBLE PRECISION TOL,VAL,TRU,ERR,ERRMAX,DB3VAL,F3,D2MACH
      DOUBLE PRECISION X(20),Y(19),Z(20),TX(40),TY(40),TZ(40),
     *     FCN(20,19,20),WORK(8440)
      INTEGER NXVAL(3),NYVAL(3),NZVAL(3),KXVAL(3),KYVAL(3),KZVAL(3)
      INTEGER KPRINT,IPASS
      LOGICAL FAIL
      COMMON /UNIT/ LUN
C
      DATA NXVAL(1),NXVAL(2),NXVAL(3) /3,6,20/
      DATA NYVAL(1),NYVAL(2),NYVAL(3) /3,7,19/
      DATA NZVAL(1),NZVAL(2),NZVAL(3) /3,8,20/
      DATA KXVAL(1),KXVAL(2),KXVAL(3) /2,4,7/
      DATA KYVAL(1),KYVAL(2),KYVAL(3) /2,4,9/
      DATA KZVAL(1),KZVAL(2),KZVAL(3) /2,4,8/
C
      FAIL = .FALSE.
      TOL = 2000.0D0*D2MACH(4)
      IDX = 0
      IDY = 0
      IDZ = 0
      IPASS=1
C
      DO 500 KASE=1,2
C
C  CHOOSE PARAMETERS FOR THIS CASE
C
         NX = NXVAL(KASE)
         NY = NYVAL(KASE)
         NZ = NZVAL(KASE)
         KX = KXVAL(KASE)
         KY = KYVAL(KASE)
         KZ = KZVAL(KASE)
         DO 100 I=1,NX
            X(I) = DBLE(I-1)/DBLE(NX-1)
  100    CONTINUE
         DO 110 J=1,NY
            Y(J) = DBLE(J-1)/DBLE(NY-1)
  110    CONTINUE
         DO 120 K=1,NZ
            Z(K) = DBLE(K-1)/DBLE(NZ-1)
  120    CONTINUE
         DO 150 I=1,NX
            DO 150 J=1,NY
               DO 150 K=1,NZ
                  FCN(I,J,K) = F3(X(I),Y(J),Z(K))
  150    CONTINUE
C
C  INTERPOLATE
C
         IFLAG = 0
         CALL DB3INK(X,NX,Y,NY,Z,NZ,FCN,20,19,KX,KY,KZ,TX,TY,TZ,
     *              FCN,WORK,IFLAG)
C
C  COMPUTE MAX ERROR AT INTERPOLATION POINTS
C
         ERRMAX = 0.0D0
         DO 200 I=1,NX
            DO 200 J=1,NY
               DO 200 K=1,NZ
                  VAL = DB3VAL(X(I),Y(J),Z(K),IDX,IDY,IDZ,TX,TY,TZ,
     *                        NX,NY,NZ,KX,KY,KZ,FCN,WORK)
                  TRU = F3(X(I),Y(J),Z(K))
                  ERR = DABS(TRU-VAL)
                  ERRMAX = DMAX1(ERR,ERRMAX)
  200    CONTINUE
C
C  CHECK MAX ERROR AGAINST TOLERANCE
C
         IF (ERRMAX .LT. TOL)  GO TO 300
            FAIL = .TRUE.
            IPASS=2
            IF(KPRINT.GE.2) THEN
             WRITE(LUN,3000) KASE,TOL,NX,NY,NZ,KX,KY,KZ
             WRITE(LUN,*) ' ERROR IS ',ERRMAX
            ENDIF
  300 CONTINUE
C
  500 CONTINUE
C
C  SUMMARIZE RESULTS
C
      IF (FAIL)  WRITE(LUN,3001)
      IF (.NOT. FAIL)  WRITE(LUN,3002)
C
 3000 FORMAT(//' DB3INK/DB3VAL : FAIL CASE ',I1,' AT TOLERANCE ',
     *         1P, D10.4 / 15X,'(NX=',I2,' NY=',I2,' NZ=',I2,
     *         ' KX=',I2,' KY=',I2,' KZ=',I2,')' )
 3001 FORMAT(// ' ** TEST FOR SUBROUTINES DB3INK,DB3VAL FAILED ** ')
 3002 FORMAT(// ' ** TEST FOR SUBROUTINES DB3INK,DB3VAL PASSED ** ')
      RETURN
      END
      DOUBLE PRECISION FUNCTION F3 (X,Y,Z)
      DOUBLE PRECISION X,Y,Z,PIOV2
      PIOV2 = 2.0D0*DATAN(1.0D0)
      F3 = 0.50D0*( Y*EXP(-X) + Z*SIN(PIOV2*Y) )
      RETURN
      END
